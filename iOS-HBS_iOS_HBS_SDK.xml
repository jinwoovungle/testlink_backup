<?xml version="1.0" encoding="UTF-8"?>
<testsuite id="" name="" >
<node_order><![CDATA[]]></node_order>
<details><![CDATA[]]></details> 
<testsuite id="47135" name="Functional" >
<node_order><![CDATA[1]]></node_order>
<details><![CDATA[]]></details> 
<testsuite id="47137" name="Initialization" >
<node_order><![CDATA[1]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="47144" name="Initialize sdk successfully">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[1]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[initialize sdk with a valid app id]]></summary>
	<preconditions><![CDATA[<p>The network (WIFI/3G) is connected.</p><p>device os version >= 8.0</p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[<p>Get the sdkDidInitialize callback called.</p><p>sdk.initialized is true.</p><p>(The callback should be called in main thread.)</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47147" name="Initialize sdk with a empty app id">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[2]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Initialize sdk with a empty app id]]></summary>
	<preconditions><![CDATA[<p>The network (WIFI/3G) is connected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[<p>Get the sdkFailedToInitialize callback called.</p><p>with correct error information.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47150" name="Initialize sdk with invalid app id">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[3]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Initialize sdk with a invalid app id.]]></summary>
	<preconditions><![CDATA[<p>The network (WIFI/3G) is connected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[<p>Get the sdkFailedToInitialize callback called.</p><p>with correct error information.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47153" name="Set hb_enabled to false then initialize SDK">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[4]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Set hb_enabled to false, then initalize the sdk]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[<p>1. Get the sdkFailedToInitialize callback called.</p><p>with correct error information.</p><p>2. The retry mechanism will not be triggered;</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47156" name="Initialize sdk on old device">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[5]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Initialize sdk on a device which version is lower than required(8.0)]]></summary>
	<preconditions><![CDATA[<p>The iOS version of the test device is lower than 8.0</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[<p>Get the sdkFailedToInitialize callback called.</p><p>with correct error information.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47159" name="Initialize sdk with network disconnected">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[6]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Initalize sdk with network disconnection.
Verify retry behavirour]]></summary>
	<preconditions><![CDATA[<p>The network (WIFI/3G) is disconnected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[<p>The SDK will keep trying to access the /hbConfig with a predefined time intervals.</p><p>Get the sdkFailedToInitialize callback called until it reach to the maximum count(15).</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47162" name="Initialize sdk with unstable network connection">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[7]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Initalize sdk with network unstable condition
verify retry behavirour.]]></summary>
	<preconditions><![CDATA[<p>The network (WIFI/3G) is disconnected.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Disconnect the network </p><p>Initialize sdk.</p><p>monitor the retry behaviour</p><p>connect the network after sdk retry for several times(<15)</p><p></p>]]></actions>
	<expectedresults><![CDATA[<p>The SDK will keep trying to access the /hbConfig with a predefined time intervals.</p><p>Get the sdkDidInitialized call called until the network connected.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47165" name="Verify sdk refresh configuration">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[8]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[sdk will refresh configuration(/hbConfig) by a predefined time interval.]]></summary>
	<preconditions><![CDATA[<p>The network (WIFI/3G) is connected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Initialize sdk. monitor the /hbConfig accessing.</p>]]></actions>
	<expectedresults><![CDATA[<p>the sdk should keep accessing /hbConfig by a predefined time interval(5min)</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47168" name="Initialize sdk on the thread other than main thread">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[9]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Initialize api should be called on main thread.
Call api to initialize sdk in a thread other than main thread.]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[<p>For debug version, there will be a crash.</p><p>For release version, there will be a error returned by sdkFailedToInitialize.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47171" name="Initialize sdk with a nil app id">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[10]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Initialize sdk with a nil app id]]></summary>
	<preconditions><![CDATA[<p>The network (WIFI/3G) is connected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[<p>Get the sdkFailedToInitialize callback called.</p><p>with correct error information.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47174" name="Placement type parameter for a interstitial placement does not pass">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[11]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "placement_type" does not pass in the response of /v1/hbConfig for a interstitial placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "placement_type" does not pass in the response of /v1/hbConfig </p><p>2、The placement is interstitial</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "placement_type" does not pass in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is interstitial</p>]]></actions>
	<expectedresults><![CDATA[<p>The interstitial placement can load successfully</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47177" name="Placement type parameter for a interstitial placement is invalid">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[12]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "placement_type" is invalid in the response of /v1/hbConfig for a interstitial placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "placement_type" is invalid in the response of /v1/hbConfig </p><p>2、The placement is interstitial</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "placement_type" is invalid (for examle is 3) in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is interstitial</p>]]></actions>
	<expectedresults><![CDATA[<p>The interstitial placement is deemed as an invalid placement and can not load interstitial</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47180" name="Placement type is interstitial for a interstitial placement">
	<node_order><![CDATA[13]]></node_order>
	<externalid><![CDATA[13]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "placement_type" is interstitial in the response of /v1/hbConfig for a interstitial placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "placement_type" is interstitial in the response of /v1/hbConfig </p><p>2、The placement is interstitial</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "placement_type" is 0 in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is interstitial</p>]]></actions>
	<expectedresults><![CDATA[<p>The interstitial placement can load successfully</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47183" name="Placement is actually interstitial, but we use this placement as rewarded video">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[14]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Placement is actually interstitial, but we use this placement as rewarded video]]></summary>
	<preconditions><![CDATA[<p>The placement is interstitial</p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Configure a interstitial placement</p><p>2、Start Vungle Advanced Auction SDK successfulfly</p><p>3、Use this interstitial placement to load rewarded video ads</p>]]></actions>
	<expectedresults><![CDATA[<p>The placement can not load successfully.</p><p>Error "The placement type is mismatched" will be shown</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47186" name="Placement type parameter for a rewarded video placement does not pass">
	<node_order><![CDATA[15]]></node_order>
	<externalid><![CDATA[15]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "placement_type" does not pass in the response of /v1/hbConfig for a rewarded video placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "placement_type" does not pass in the response of /v1/hbConfig </p><p>2、The placement is rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "placement_type" does not pass in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is rewarded video</p>]]></actions>
	<expectedresults><![CDATA[<p>The rewarded video placement can load successfully</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47189" name="Placement type parameter for a rewarded video placement is invalid">
	<node_order><![CDATA[16]]></node_order>
	<externalid><![CDATA[16]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "placement_type" is invalid in the response of /v1/hbConfig for a rewarded video placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "placement_type" is invalid in the response of /v1/hbConfig </p><p>2、The placement is rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "placement_type" is invalid (for examle is 3) in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is rewarded video</p>]]></actions>
	<expectedresults><![CDATA[<p>The rewarded video placement is deemed as an invalid placement and can not load interstitial</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47192" name="Placement type is rewarded video for a rewarded video placement">
	<node_order><![CDATA[17]]></node_order>
	<externalid><![CDATA[17]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "placement_type" is rewarded video in the response of /v1/hbConfig for a rewarded video placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "placement_type" is rewarded video in the response of /v1/hbConfig </p><p>2、The placement is rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "placement_type" is 1 in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is rewarded video</p>]]></actions>
	<expectedresults><![CDATA[<p>The rewarded video placement can load successfully</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47195" name="Placement is actually rewarded video, but we use this placement as interstitial">
	<node_order><![CDATA[18]]></node_order>
	<externalid><![CDATA[18]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Placement is actually rewarded video, but we use this placement as interstitial]]></summary>
	<preconditions><![CDATA[<p>Placement is actually rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Configure a rewarded video placement</p><p>2、Start Vungle Advanced Auction SDK successfulfly</p><p>3、Use this rewarded video placement to load interstitial ad</p>]]></actions>
	<expectedresults><![CDATA[<p>The placement can not load successfully.</p><p>Error "The placement type is mismatched" will be shown</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47648" name="Initialize the SDK with invalid config response">
	<node_order><![CDATA[19]]></node_order>
	<externalid><![CDATA[119]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[<p>
	1. The callback sdkFailedToInitializeWithError should be triggerd;</p>
<p>
	2. The error code should be&nbsp;kVGAErrorInvalidConfiguration;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite><testsuite id="47138" name="LoadAD" >
<node_order><![CDATA[2]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="47198" name="Load interstitial successfully after sdk initialized">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[19]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load interstitial.]]></summary>
	<preconditions><![CDATA[<p>Setup accounts correctly.(vungle, inmobi, admob, facebook, applovin, unity, mopub)</p><p>The sdk is initialized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an interstitial object with a valid placement id.</p><p>Call api to load interstitial.</p>]]></actions>
	<expectedresults><![CDATA[<p>The InterstitialDidLoad callback called with each ad network.</p><p>(The callback should be called in the main thread)</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47201" name="Load interstitial with a invalid placement id.">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[20]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load interstitial with a invalid placement id.
(empty or a placement id not belong to this app.)]]></summary>
	<preconditions><![CDATA[<p>Setup accounts correctly.(vungle, inmobi, admob, facebook, applovin, unity, mopub)</p><p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an Interstitial object with a invalid interstitial id.</p><p>Call api to load interstitial.</p>]]></actions>
	<expectedresults><![CDATA[<p>Get the interstitialFailedToLoad called.</p><p>With correct error</p><p>(The callback should be called in the main thread)</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47204" name="Load interstitial successfully when get sdk initialized callback">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[21]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[When get sdk initalized callback, Call sdk api to load interstitial immediately.]]></summary>
	<preconditions><![CDATA[<p>Setup accounts correctly.(vungle, inmobi, admob, facebook, applovin, unity, mopub)</p><p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>When get the sdk initalized callback, Create an Interstitial object with a valid interstitial id.</p><p>Call api to load interstitial.</p>]]></actions>
	<expectedresults><![CDATA[<p>The InterstitialDidLoad callback called with each ad network.</p><p>(The callback should be called in the main thread)</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47207" name="Load interstitial without sdk initialized">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[22]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load interstitial before sdk did initialized]]></summary>
	<preconditions><![CDATA[<p>The sdk is initializing.</p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an Interstitial object with a valid interstitial id.</p><p>Call api to load interstitial.</p>]]></actions>
	<expectedresults><![CDATA[<p>Get the interstitialFailedToLoad called.</p><p>With correct error</p><p>(The callback should be called in the main thread)</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47210" name="Load interstitial with sdk initalize failed.">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[23]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load interstitial when sdk failed to initialized]]></summary>
	<preconditions><![CDATA[<p>Initialize sdk with a empty app id. Get sdkDidFailedtoInitiallize called.</p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an Interstitial object with a valid interstitial id.</p><p>Call api to load interstitial.</p>]]></actions>
	<expectedresults><![CDATA[<p>Get the interstitialFailedToLoad called.</p><p>With correct error</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47213" name="Load interstitial in a thread other than main thread">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[24]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load interstitial in a thread other than main thread]]></summary>
	<preconditions><![CDATA[<p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an Interstitial object with a valid interstitial id.</p><p>Call api to load interstitial in a thread other than main thread.</p>]]></actions>
	<expectedresults><![CDATA[<p>For debug version, there will be a crash.</p><p>For release version, there will be a error returned by interstitial:didFailToLoadWithError:withAdNetwork:.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47216" name="Check intersitial.isReady during ad lifecycle">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[25]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Check the property "isReady" when load ad & play ad]]></summary>
	<preconditions><![CDATA[<p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an interstitial object with a valid placement id.</p><p>1. Check the property "isReady".</p><p>2. Load the ad, check the "isReady".</p><p>3. Play the ad and colose the ad, check the "isReady".</p>]]></actions>
	<expectedresults><![CDATA[<p>1. "isReady" should be NO</p><p>2. "isReady" should be YES when first ad network loaded ad</p><p>3. "isReady" should be NO when ad finished play.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47219" name="Check intersitial.preparedAdNetworks">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[26]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Check the property "preparedAdNetworks" when loading ad]]></summary>
	<preconditions><![CDATA[<p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an interstitial object with a valid placement id.</p><p>1. Check the property "preparedAdNetworks"</p><p>2. Load the ad, check the "preparedAdNetworks"</p>]]></actions>
	<expectedresults><![CDATA[<p>1. the "preparedAdNetworks" should be nil</p><p>2. The "preparedAdNetworks" should contain the ad networks which load ad successfully.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47222" name="Load interstitial when loading">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[27]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load interstitial during loading (use new one)]]></summary>
	<preconditions><![CDATA[<p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	Create an interstitial object with a valid placement id.</p>
<p>
	1. load the ad</p>
<p>
	2. load the ad during ad loading</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	the second load successfully, the /requestAd request should not be triggered.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47226" name="Load interstitial after loaded">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[28]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load rewarded video after all ad networks loaded(use old one)]]></summary>
	<preconditions><![CDATA[<p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an rewarded video object with a valid placement id.</p><p>1. load the ad</p><p>2. load the ad after all ad newtorks loaded</p>]]></actions>
	<expectedresults><![CDATA[<p>the second load should be successful and can play the ad</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47229" name="Load rewarded video ad successfully after sdk initalized">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[29]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load rewarded video ad.]]></summary>
	<preconditions><![CDATA[<p>Setup accounts correctly.(vungle, inmobi, admob, facebook, applovin, unity, mopub)</p><p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an Interstitial object with a valid placement id.</p><p>Call api to load interstitial.</p>]]></actions>
	<expectedresults><![CDATA[<p>The InterstitialDidLoad callback called with each ad network.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47232" name="Load rewarded video ad successfully when get sdk initialized callback">
	<node_order><![CDATA[13]]></node_order>
	<externalid><![CDATA[30]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[When get sdk initalized callback, Call sdk api to load rewarded video immediately.]]></summary>
	<preconditions><![CDATA[<p>Setup accounts correctly.(vungle, inmobi, admob, facebook, applovin, unity, mopub)</p><p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>When get the sdk initalized callback, Create an rewarded video ad object with a valid placement id.</p><p>Call api to load rewarded video.</p>]]></actions>
	<expectedresults><![CDATA[<p>The InterstitialDidLoad callback called with each ad network.</p><p>(The callback should be called in the main thread)</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47235" name="Load rewarded video ad with a invalid placement id.">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[31]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load rewarded video ad with a invalid placement id.
(empty or a placement id not belong to this app.)]]></summary>
	<preconditions><![CDATA[<p>Setup accounts correctly.(vungle, inmobi, admob, facebook, applovin, unity, mopub)</p><p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an rewarded video ad object with a invalid placement id.</p><p>Call api to load interstitial.</p>]]></actions>
	<expectedresults><![CDATA[<p>Get the rewardedVideoAdFailedToLoad called.</p><p>With correct error</p><p>(The callback should be called in the main thread)</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47238" name="Load rewarded video ad without sdk initialized">
	<node_order><![CDATA[15]]></node_order>
	<externalid><![CDATA[32]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load rewarded video ad before sdk did initialized]]></summary>
	<preconditions><![CDATA[<p>The sdk is initializing.</p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an rewarded video ad object with a valid placement id.</p><p>Call api to load reward video ad</p>]]></actions>
	<expectedresults><![CDATA[<p>Get the rewardedVideoAdFailedToLoad called.</p><p>With correct error</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47241" name="Load rewarded video ad with sdk initalize failed.">
	<node_order><![CDATA[16]]></node_order>
	<externalid><![CDATA[33]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load rewarded video ad when sdk failed to initialized]]></summary>
	<preconditions><![CDATA[<p>Initialize sdk with a empty app id. Get sdkDidFailedtoInitiallize called.</p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an rewarded video ad object with a valid placement id.</p><p>Call api to load rewarded video ad</p>]]></actions>
	<expectedresults><![CDATA[<p>Get the rewardedVideoAdFailedToLoad called.</p><p>With correct error</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47244" name="Load rewarded video ad in a thread other than main thread">
	<node_order><![CDATA[17]]></node_order>
	<externalid><![CDATA[34]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load rewarded video ad in a thread other than main thread]]></summary>
	<preconditions><![CDATA[<p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an rewarded video ad object with a valid placement id.</p><p>Call api to load rewarded video ad in a thread other than main thread.</p>]]></actions>
	<expectedresults><![CDATA[<p>For debug version, there will be a crash.</p><p>For release version, there will be a error returned by rewardedVideoAd:didFailToLoadWithError:withAdNetwork:.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47247" name="Check rewardedVideoAd.isReady during ad lifecycle">
	<node_order><![CDATA[18]]></node_order>
	<externalid><![CDATA[35]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Check the property "isReady" when load ad & play ad]]></summary>
	<preconditions><![CDATA[<p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create a rewarded video ad object with a valid placement id.</p><p>1. Check the property "isReady".</p><p>2. Load the ad, check the "isReady".</p><p>3. Play the ad, check the "isReady".</p>]]></actions>
	<expectedresults><![CDATA[<p>1. "isReady" should be NO</p><p>2. "isReady" should be YES when first ad network loaded ad</p><p>3. "isReady" should be NO when ad finished play.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47250" name="Check rewardedVideoAd.preparedAdNetworks">
	<node_order><![CDATA[19]]></node_order>
	<externalid><![CDATA[36]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Check the property "preparedAdNetworks" when loading ad]]></summary>
	<preconditions><![CDATA[<p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create a rewarded video ad object with a valid placement id.</p><p>1. Check the property "preparedAdNetworks"</p><p>2. Load the ad, check the "preparedAdNetworks"</p>]]></actions>
	<expectedresults><![CDATA[<p>1. the "preparedAdNetworks" should be nil</p><p>2. The "preparedAdNetworks" should contain the ad networks which load ad successfully.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47253" name="Load rewarded video ad when loading">
	<node_order><![CDATA[20]]></node_order>
	<externalid><![CDATA[37]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to load rewarded video ad during loading (use new one)]]></summary>
	<preconditions><![CDATA[<p>The sdk is initalized successfully. (Get sdkDidInitialize called)</p><p></p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create an rewarded video ad object with a valid placement id.</p><p>1. load the ad</p><p>2. load the ad during ad loading</p>]]></actions>
	<expectedresults><![CDATA[<p>the second load successfully</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47651" name="Load interstitial with an rewarded placement id">
	<node_order><![CDATA[21]]></node_order>
	<externalid><![CDATA[120]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47653" name="All ad networks fail in interstitial ad loading">
	<node_order><![CDATA[22]]></node_order>
	<externalid><![CDATA[121]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47659" name="Verify the interstitial placementid property">
	<node_order><![CDATA[23]]></node_order>
	<externalid><![CDATA[124]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47664" name="Load rewarded video with an interstitial placement id">
	<node_order><![CDATA[24]]></node_order>
	<externalid><![CDATA[126]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47666" name="All ad networks are successfully loaded when loading rewarded ad">
	<node_order><![CDATA[25]]></node_order>
	<externalid><![CDATA[127]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47668" name="All ad networks failed in rewarded ad loading">
	<node_order><![CDATA[26]]></node_order>
	<externalid><![CDATA[128]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47674" name="Verify the rewarded placementid property">
	<node_order><![CDATA[27]]></node_order>
	<externalid><![CDATA[131]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47676" name="Load rewarded after loaded">
	<node_order><![CDATA[28]]></node_order>
	<externalid><![CDATA[132]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[<p>
	the second load should be successful and the rewarded ad can be played back.</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="48393" name="Callback method interstitialDidLoad  verification">
	<node_order><![CDATA[29]]></node_order>
	<externalid><![CDATA[145]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">Callback method interstitialDidLoad verification</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">The sdk is initalized successfully. (Get sdkDidInitialize called) At least one ad network has loaded the interstitial</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">Create an Interstitial object with a valid interstitial id. 1、Call api to load interstitial. 2、At least one ad network has loaded the interstitial.</span></p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">1、Callback method interstitialDidLoad will be called. 2、 We could see this callback log in the callbacks tab of TestApp</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="48397" name="Callback method interstitial:didFailToLoadWithError:  verification when some ad networks load failed">
	<node_order><![CDATA[30]]></node_order>
	<externalid><![CDATA[146]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">Callback method interstitial:didFailToLoadWithError: verification when some ad networks load ad failed</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">The sdk is initalized successfully. (Get sdkDidInitialize called) Some ad networks load ad failed and some ad networks load ad successfully.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">Create an Interstitial object with a valid interstitial id. 1、Call api to load interstitial. 2、Some ad networks load ad failed and some ad networks load ad successfully.</span></p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;">1、Callback method interstitial:didFailToLoadWithError: </span><span style="color: rgb(0, 0, 255); font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;"> </span><span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; color: rgb(166, 77, 121); font-weight: bold; text-decoration-skip-ink: none;">will not be called</span><span style="color: rgb(0, 0, 255); font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;"> </span><span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;">for successful download. 2、 We</span><span style="color: rgb(0, 0, 255); font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;"> </span><span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; color: rgb(166, 77, 121); font-weight: bold; text-decoration-skip-ink: none;">could not</span><span style="color: rgb(0, 0, 255); font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;"> </span><span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;">see this callback log in the callbacks tab of TestApp <span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;">for successful download. </span></span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="48400" name="Callback method rewardedVideoAdDidLoad  verification">
	<node_order><![CDATA[31]]></node_order>
	<externalid><![CDATA[147]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">Callback method rewardedVideoAdDidLoad verification</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">The sdk is initalized successfully. (Get sdkDidInitialize called) At least one ad network has loaded the rewarded video </span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">Create a rewarded video object with a valid rewarded video id. 1、Call api to load rewarded video. 2、At least one ad network has loaded the rewarded video.</span></p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">1、Callback method rewardedVideoAdDidLoad will be called. 2、 We could see this callback log in the callbacks tab of TestApp</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="48403" name="Callback method rewardedVideoAd:didFailToLoadWithError: verification when some adNetworks load fail">
	<node_order><![CDATA[32]]></node_order>
	<externalid><![CDATA[148]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">Callback method rewardedVideoAd:didFailToLoadWithError: verification when some ad networks load ad failed</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">The sdk is initalized successfully. (Get sdkDidInitialize called) Some ad networks load ad failed and some ad networks load ad successfully.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">Create a rewarded video object with a valid rewarded video id. 1、Call api to load rewarded video. 2、Some ad networks load ad failed and some ad networks load ad successfully.</span></p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;">1、Callback method rewardedVideoAd:didFailToLoadWithError: </span><span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; color: rgb(166, 77, 121); font-weight: bold; text-decoration-skip-ink: none;">will not be called <span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;">for successful download. </span></span><span style="color: rgb(0, 0, 255); font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;"> </span><span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;">2、 We</span><span style="color: rgb(0, 0, 255); font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;"> </span><span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; color: rgb(166, 77, 121); font-weight: bold; text-decoration-skip-ink: none;">could not</span><span style="color: rgb(0, 0, 255); font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;"> </span><span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;">see this callback log in the callbacks tab of TestApp<span style="font-family: docs-Calibri; font-size: 15px; white-space: pre-wrap; text-decoration-skip-ink: none;">for successful download. </span></span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite><testsuite id="47139" name="PlayAd" >
<node_order><![CDATA[3]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="47258" name="Play intersitital before loaded">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[38]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to play interstitial before loaded.]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create the interstitial object.</p><p>a)Call api to play the interstitial.</p><p>or</p><p>b)Call api to load the interstitial and play the interstitial together.</p>]]></actions>
	<expectedresults><![CDATA[<p>Get the interstitialFailedToPlay called.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47261" name="Play intersitital after ad loaded(single ad network)">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[39]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to play interstitial after single ad network loaded.]]></summary>
	<preconditions><![CDATA[<p>network is connected.</p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1.Create the interstitial object.</p><p>2.Load the ad</p><p>3.After ad loaded for one ad network, play the ad</p>]]></actions>
	<expectedresults><![CDATA[<p>The first ad network of /bid response should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47264" name="Play intersitital after ad loaded(multiple ad network)">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[40]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to play interstitial after mutiple ad network loaded.]]></summary>
	<preconditions><![CDATA[<p>network is connected.</p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1.Create the interstitial object.</p><p>2.Load the ad</p><p>3.After interstitial loaded for mutiple ad network, play the ad</p>]]></actions>
	<expectedresults><![CDATA[<p>The first ad network of /bid response should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47267" name="Play interstitial with network disconnected">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[41]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to play interstitial when network disconnected]]></summary>
	<preconditions><![CDATA[<p>network connected.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1.Create the interstitial object.</p><p>2.Load the ad</p><p>3.Disconnect the network</p><p>4.Play the ad</p>]]></actions>
	<expectedresults><![CDATA[<p>The first loaded ad network in the configuration should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47270" name="Play interstitial in a thread other than main thread">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[42]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to play interstitial in a thread other than main thread]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create the interstitial object.</p><p>load the ad</p><p>call api to play the ad in a thread other than main thread</p>]]></actions>
	<expectedresults><![CDATA[<p>For debug version, there will be a crash.</p><p>For release version,The interstitial:didFailToPresentWithError called with correct error.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47273" name="Reload intersitial after interstitial finished play(old object)">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[43]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to reload interstitial when ad play finished(reuse old object)]]></summary>
	<preconditions><![CDATA[<p>network is connected</p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create the interstitial object</p><p>load & play the ad</p><p>reload the ad when get didDismiss event with the existed object.(do not create new instance)</p>]]></actions>
	<expectedresults><![CDATA[<p>the didFailedToLoad should be called with correct error</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47276" name="Reload intersitial after interstitial finished play(new object)">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[44]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to reload interstitial when ad play finished(new object)]]></summary>
	<preconditions><![CDATA[<p>network is connected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create the interstitial object</p><p>load & play the ad</p><p>reload the ad when get didDismiss event with new object.(create new interstitial instance with the same placementId)</p><p>play the ad</p>]]></actions>
	<expectedresults><![CDATA[<p>should reload & play ad successfully</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47279" name="Reload intersitial during interstitial play(old object)">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[45]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to reload interstitial when ad play finished(reuse old object)]]></summary>
	<preconditions><![CDATA[<p>network is connected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create the interstitial object</p><p>load & play the ad</p><p>reload the ad when get following events with the existed object.(do not create new instance)</p><p>1. willPresent</p><p>2. didPresent</p><p>3. willDismiss</p>]]></actions>
	<expectedresults><![CDATA[<p>the didFailedToLoad should be called with correct error</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47282" name="Reload intersitial during interstitial play(new object)">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[46]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to reload interstitial when ad play finished(new object)]]></summary>
	<preconditions><![CDATA[<p>network is connected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create the interstitial object</p><p>load & play the ad</p><p>reload the ad when get following events with new object.(create new interstitial instance with the same placementId)</p><p>1. willPresent</p><p>2. didPresent</p><p>3. willDismiss</p><p>play the ad</p>]]></actions>
	<expectedresults><![CDATA[<p>should reload & play ad successfully</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47285" name="Play rewarded video ad before loaded">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[47]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to play rewarded video ad before loaded.]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create the rewarded video ad object.</p><p>a)Call api to play the rewarded video ad.</p><p>or</p><p>b)Call api to load the rewarded video ad and play the rewarded video ad together.</p>]]></actions>
	<expectedresults><![CDATA[<p>Get the rewardedVideoAdFailedToPlay called.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47288" name="Play rewarded video ad after loaded(single ad network)">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[48]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to play rewarded video ad after single ad network loaded.]]></summary>
	<preconditions><![CDATA[<p>network is connected.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1.Create the rewarded video ad object.</p><p>2.load the ad</p><p>3.after ad loaded for one ad network, play the ad</p>]]></actions>
	<expectedresults><![CDATA[<p>The first ad network of /bid response should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47291" name="Play rewarded video ad after ad loaded(multiple ad networks)">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[49]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to play rewarded video ad after mutiple ad network loaded.]]></summary>
	<preconditions><![CDATA[<p>network is connected.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1.Create the rewarded video ad object.</p><p>2.load the ad</p><p>3.after interstitial loaded for mutiple ad network, play the ad</p>]]></actions>
	<expectedresults><![CDATA[<p>The first ad network of /bid response should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47294" name="Play rewarded video with network disconnected">
	<node_order><![CDATA[13]]></node_order>
	<externalid><![CDATA[50]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to play rewarded video ad when network disconnected]]></summary>
	<preconditions><![CDATA[<p>network disconnected.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1.Create the rewarded video object.</p><p>2.Load the ad</p><p>3.Disconnect the network</p><p>4.Play the ad</p>]]></actions>
	<expectedresults><![CDATA[<p>The first loaded ad network in the configuration should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47297" name="Play rewarded video in a thread other than main thread">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[51]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to play rewarded video ad in a thread other than main thread]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1.Create the rewarded video ad object.</p><p>2.Load the ad</p><p>3.Call api to play the ad in a thread other than main thread</p>]]></actions>
	<expectedresults><![CDATA[<p>For debug version, there will be a crash.</p><p>For release version,The rewardedVideoAd:didFailToPresentWithError called with correct error.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47300" name="Close the playing rewarded video ad when ad complete">
	<node_order><![CDATA[15]]></node_order>
	<externalid><![CDATA[52]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Close the playing rewarded video ad when ad finished]]></summary>
	<preconditions><![CDATA[<p>network connected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1.Create the rewarded video ad object.</p><p>2.Load the ad</p><p>3.Play tha ad</p><p>4.Close the ad when ad finished</p>]]></actions>
	<expectedresults><![CDATA[<p>The didRewardUserWithReward called</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47303" name="Close the playing rewarded video ad before ad complete">
	<node_order><![CDATA[16]]></node_order>
	<externalid><![CDATA[53]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Close the playing rewarded video ad before ad finished]]></summary>
	<preconditions><![CDATA[<p>network connected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1.Create the interstitial object.</p><p>2.Load the ad</p><p>3.Call api to play the ad in a thread other than main thread</p>]]></actions>
	<expectedresults><![CDATA[<p>The didRewardUserWithReward called Should NOT called</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47306" name="Reload rewarded video ad after ad finished play(old object)">
	<node_order><![CDATA[17]]></node_order>
	<externalid><![CDATA[54]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to reload rewarded video ad when ad play finished(reuse old object)]]></summary>
	<preconditions><![CDATA[<p>network is connected</p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create the rewarded video ad object</p><p>load & play the ad</p><p>reload the ad when get didDismiss event with the existed object.(do not create new instance)</p>]]></actions>
	<expectedresults><![CDATA[<p>the didFailedToLoad should be called with correct error</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47309" name="Reload rewarded video ad after ad finished play(new object)">
	<node_order><![CDATA[18]]></node_order>
	<externalid><![CDATA[55]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to reload rewarded video ad when ad play finished(new object)]]></summary>
	<preconditions><![CDATA[<p>network is connected</p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create the rewarded video ad object</p><p>load & play the ad</p><p>reload the ad when get didDismiss event with new object.(create new interstitial instance with the same placementId)</p><p>play the ad</p>]]></actions>
	<expectedresults><![CDATA[<p>should reload & play ad successfully</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47312" name="Reload rewarded video ad during ad play(old object)">
	<node_order><![CDATA[19]]></node_order>
	<externalid><![CDATA[56]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to reload rewarded video ad when ad play finished(reuse old object)]]></summary>
	<preconditions><![CDATA[<p>network is connected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create the rewarded video ad object</p><p>load & play the ad</p><p>reload the ad when get following events with the existed object.(do not create new instance)</p><p>1. willPresent</p><p>2. didPresent</p><p>3. willDismiss</p>]]></actions>
	<expectedresults><![CDATA[<p>the didFailedToLoad should be called with correct error</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47315" name="Reload rewarded video ad during ad play(new object)">
	<node_order><![CDATA[20]]></node_order>
	<externalid><![CDATA[57]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call sdk api to reload rewarded video ad when ad play finished(new object)]]></summary>
	<preconditions><![CDATA[<p>network is connected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Create the rewarded video ad object</p><p>load & play the ad</p><p>reload the ad when get following events with new object.(create new interstitial instance with the same placementId)</p><p>1. willPresent</p><p>2. didPresent</p><p>3. willDismiss</p><p>play the ad</p>]]></actions>
	<expectedresults><![CDATA[<p>should reload & play ad successfully</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47318" name="Bid strategy is auction for a interstitial placement">
	<node_order><![CDATA[21]]></node_order>
	<externalid><![CDATA[58]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "bid_strategy" is auction in the response of /v1/hbConfig for a interstitial placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "bid_strategy" is auction in the response of /v1/hbConfig </p><p>2、The placement is interstitial</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "bid_strategy" is 0 in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is interstitial</p>]]></actions>
	<expectedresults><![CDATA[<p>The first ad network of /bid response should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47321" name="Bid strategy is waterfall for a interstitial placement">
	<node_order><![CDATA[22]]></node_order>
	<externalid><![CDATA[59]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "bid_strategy" is waterfall in the response of /v1/hbConfig for a interstitial placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "bid_strategy" is waterfall in the response of /v1/hbConfig </p><p>2、The placement is interstitial</p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "bid_strategy" is 1 in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is interstitial</p>]]></actions>
	<expectedresults><![CDATA[<p>The /bid request will not call</p><p>The first ad network of ad networks array returned in the /v1/hbConfig response should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47324" name="Bid strategy parameter does not pass for a interstitial placement">
	<node_order><![CDATA[23]]></node_order>
	<externalid><![CDATA[60]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "bid_strategy" does not pass in the response of /v1/hbConfig for a interstitial placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "bid_strategy" does not pass in the response of /v1/hbConfig </p><p>2、The placement is interstitial</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "bid_strategy" does not pass in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is interstitial</p>]]></actions>
	<expectedresults><![CDATA[<p>The first ad network of /bid response should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47327" name="Bid strategy parameter is invalid for a interstitial placement">
	<node_order><![CDATA[24]]></node_order>
	<externalid><![CDATA[61]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "bid_strategy" is invalid in the response of /v1/hbConfig for a interstitial placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "bid_strategy" is invalid in the response of /v1/hbConfig </p><p>2、The placement is interstitial</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "bid_strategy" is invalid(for example is -1 or 2) in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is interstitial</p>]]></actions>
	<expectedresults><![CDATA[<p>The first ad network of /bid response should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47330" name="Bid strategy is auction for a rewarded video placement">
	<node_order><![CDATA[25]]></node_order>
	<externalid><![CDATA[62]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "bid_strategy" is auction in the response of /v1/hbConfig for a rewarded video placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "bid_strategy" is auction in the response of /v1/hbConfig </p><p>2、The placement is rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "bid_strategy" is 0 in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is rewarded video</p>]]></actions>
	<expectedresults><![CDATA[<p>The first ad network of /bid response should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47333" name="Bid strategy is waterfall for a rewarded video placement">
	<node_order><![CDATA[26]]></node_order>
	<externalid><![CDATA[63]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "bid_strategy" is waterfall in the response of /v1/hbConfig for a rewarded video placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "bid_strategy" is waterfall in the response of /v1/hbConfig </p><p>2、The placement is rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "bid_strategy" is 1 in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is rewarded video</p>]]></actions>
	<expectedresults><![CDATA[<p>The /bid request will not call</p><p>The first ad network of ad networks array returned in the /v1/hbConfig response should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47336" name="Bid strategy parameter does not pass for a rewarded video placement">
	<node_order><![CDATA[27]]></node_order>
	<externalid><![CDATA[64]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "bid_strategy" does not pass in the response of /v1/hbConfig for a rewarded video placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "bid_strategy" does not pass in the response of /v1/hbConfig </p><p>2、The placement is rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "bid_strategy" does not pass in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is rewarded video</p>]]></actions>
	<expectedresults><![CDATA[<p>The first ad network of /bid response should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47339" name="Bid strategy parameter is invalid for a rewarded video placement">
	<node_order><![CDATA[28]]></node_order>
	<externalid><![CDATA[65]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "bid_strategy" is invalid in the response of /v1/hbConfig for a rewarded video placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "bid_strategy" is invalid in the response of /v1/hbConfig </p><p>2、The placement is rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "bid_strategy" is invalid(for example is -1 or 2) in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is rewarded video</p>]]></actions>
	<expectedresults><![CDATA[<p>The first ad network of /bid response should be played</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47342" name="Overwrite rewards parameters with valid value">
	<node_order><![CDATA[29]]></node_order>
	<externalid><![CDATA[66]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "reward_override" is valid in the response of /v1/hbConfig for a rewarded video placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "reward_override" is valid in the response of /v1/hbConfig </p><p>2、The placement is rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "reward_override" is valid with correct value of "item" and "amount" in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is rewarded video</p>]]></actions>
	<expectedresults><![CDATA[<p>The reward could be override successfully with correct type and amount after watching the rewarded video completely</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47345" name="Overwrite rewards parameters does not pass">
	<node_order><![CDATA[30]]></node_order>
	<externalid><![CDATA[67]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "reward_override" does not pass in the response of /v1/hbConfig for a rewarded video placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "reward_override" does not pass in the response of /v1/hbConfig </p><p>2、The placement is rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "reward_override" does not pass in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is rewarded video</p>]]></actions>
	<expectedresults><![CDATA[<p>The reward will use the configuration of ad network that played the ad after watching the rewarded video completely</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47348" name="Overwrite rewards parameters does not pass &quot;item&quot; parameter">
	<node_order><![CDATA[31]]></node_order>
	<externalid><![CDATA[68]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "item" of "reward_override" does not pass in the response of /v1/hbConfig for a rewarded video placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "item" of "reward_override" does not pass in the response of /v1/hbConfig </p><p>2、The placement is rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "item" of "reward_override" does not pass in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is rewarded video</p>]]></actions>
	<expectedresults><![CDATA[<p>The reward will use the configuration of ad network that played the ad after watching the rewarded video completely; The "amount" paramter does not take effect</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47351" name="Overwrite rewards parameters does not pass &quot;amount&quot; parameter">
	<node_order><![CDATA[32]]></node_order>
	<externalid><![CDATA[69]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "amount" of "reward_override" does not pass in the response of /v1/hbConfig for a rewarded video placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "amount" of "reward_override" does not pass in the response of /v1/hbConfig </p><p>2、The placement is rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "amount" of "reward_override" does not pass in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is rewarded video</p>]]></actions>
	<expectedresults><![CDATA[<p>The reward will use the configuration of ad network that played the ad after watching the rewarded video completely; The "item" paramter does not take effect</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47354" name="&quot;Amount&quot; parameter of Overwrite rewards parameters is negative">
	<node_order><![CDATA[33]]></node_order>
	<externalid><![CDATA[70]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Parameter "amount" of "reward_override" is negative in the response of /v1/hbConfig for a rewarded video placement]]></summary>
	<preconditions><![CDATA[<p>1、Parameter "amount" of "reward_override" is negative in the response of /v1/hbConfig </p><p>2、The placement is rewarded video</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "amount" of "reward_override" is negative in the response of /v1/hbConfig (we could use mock service or change qa environment ‘s MongoDB)</p><p>3、The placement is rewarded video</p>]]></actions>
	<expectedresults><![CDATA[<p>The reward could be override successfully with the passed type and amount after watching the rewarded video completely</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47655" name="The SDK client should fall back to waterfall strategy when the bid response code return 500">
	<node_order><![CDATA[34]]></node_order>
	<externalid><![CDATA[122]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47657" name="The callback failedToPresent should be triggered when the interstitial can't be played">
	<node_order><![CDATA[35]]></node_order>
	<externalid><![CDATA[123]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47661" name="Play interstitial again after ad playback">
	<node_order><![CDATA[36]]></node_order>
	<externalid><![CDATA[125]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[<p>
	1. The callback didFailedToPresent should be triggered;</p>
<p>
	&nbsp;</p>
]]></expectedresults>
	<execution_type><![CDATA[2]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47670" name="RewardedAd: The SDK client should fallback to waterfall strategy when the bid response return 500">
	<node_order><![CDATA[37]]></node_order>
	<externalid><![CDATA[129]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47672" name="The callback failedToPresent should be triggered when the rewarded ad can't be played">
	<node_order><![CDATA[38]]></node_order>
	<externalid><![CDATA[130]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[2]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>
</testsuite><testsuite id="47140" name="PlayAd Report" >
<node_order><![CDATA[4]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="47357" name="Play interstitial with network , check play ad report">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[71]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>The interstitial is loaded.</p><p>Network is connected.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Call sdk api to play the interstitial</p>]]></actions>
	<expectedresults><![CDATA[<p>The play report will be sent when ad start to play.</p><p>Check the report parameters are correct.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47360" name="Play interstitial without network , check play ad report">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[72]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>The interstitial is loaded. Network is disconnected.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Call sdk api to play the interstitial</p>]]></actions>
	<expectedresults><![CDATA[<p>The play report will not be sent, and keep trying to resent until reach to maximum count(8).</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47363" name="Play rewarded video with network, check play ad report">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[73]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>The rewarded video ad is loaded</p><p>Network is connected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Call sdk api to play the rewarded video ad</p>]]></actions>
	<expectedresults><![CDATA[<p>The play report will be sent when ad start to play.</p><p>Check the report parameters are correct.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47366" name="Play rewarded video without network, check play ad report">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[74]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>The rewarded video ad is loaded</p><p>Network is disconnected</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Call sdk api to play the rewarded video ad</p>]]></actions>
	<expectedresults><![CDATA[<p>The play report will not be sent, and keep trying to resent until reach to maximum count(8).</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47369" name="Send unsent play ad report when sdk initialized">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[75]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>There are some play ad report failed to sent, include interstititial and rewarded video ad.</p><p>The network is connected.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>Initialize sdk successfully.</p>]]></actions>
	<expectedresults><![CDATA[<p>The unsent play report should be sent by the order they generated.</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite><testsuite id="47141" name="Logging" >
<node_order><![CDATA[5]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="47372" name="Log fuction enalbed">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[76]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Log fuction enalbed]]></summary>
	<preconditions><![CDATA[<p>Parameter "logging" is enabled in the response of /v1/hbConfig </p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "logging" is enabled in the response of /v1/hbConfig </p><p>"logging": {</p><p>"enabled": true</p><p>},</p>]]></actions>
	<expectedresults><![CDATA[<p>Vungle Advanced Auction SDK will send the log items to the log endpoint(For qa environment is https://qa-hb.api.vungle.com/v1/logging) ; </p><p>Each parameter of metadata in every log item is correct and does not have raw data</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47375" name="Log fuction disabled">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[77]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Log fuction disabled]]></summary>
	<preconditions><![CDATA[<p>Parameter "logging" is disabled in the response of /v1/hbConfig </p><p></p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "logging" is disabled in the response of /v1/hbConfig </p><p>"logging": {</p><p>"enabled": false</p><p>},</p>]]></actions>
	<expectedresults><![CDATA[<p>Vungle Advanced Auction SDK will not send the log items to the log endpoint(For qa environment is https://qa-hb.api.vungle.com/v1/logging) ; </p><p></p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47378" name="Log function integration  test with data">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[78]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Log function integration 
test with data]]></summary>
	<preconditions><![CDATA[<p>Parameter "logging" is enabled in the response of /v1/hbConfig </p><p>or open the logging switch in our code</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Start Vungle Advanced Auction SDK successfulfly</p><p>2、Parameter "logging" is enabled in the response of /v1/hbConfig </p><p>"logging": {</p><p>"enabled": true</p><p>},</p>]]></actions>
	<expectedresults><![CDATA[<p>Vungle Advanced Auction SDK will send the log items to the log endpoint </p><p>Each parameter of metadata in every log item is correct and does not have raw data;</p><p>We could search logging data in kibana and do some data analysis</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite><testsuite id="47142" name="GDPR" >
<node_order><![CDATA[6]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="47381" name="User consent status is unknown  in non EU countries.">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[79]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[User consent status is unknown 
in non EU countries.]]></summary>
	<preconditions><![CDATA[<p>Device IP is a non EU country IP.</p><p>User consetn status is unknown.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Change device IP to a non EU country IP.</p><p>2、In TestApp, choose “User consent status" </p><p>to unknown （Default）</p><p>3、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>1、In /v1/hbConfig request, parameter </p><p>”consent_status“ is unknown:</p><p>"user": {</p><p>"gdpr": {</p><p>"consent_source": "publisher",</p><p>"consent_status": "unknown",</p><p>"consent_timestamp": 0</p><p>}</p><p>}</p><p>2、In /v1/hbConfig response, </p><p>parameter "is_country_data_protected" is false</p><p>"gdpr": {</p><p>"is_country_data_protected": false</p><p>}</p><p>}</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47384" name="User consent status is accepted  in non EU countries.">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[80]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[User consent status is accepted 
in non EU countries.]]></summary>
	<preconditions><![CDATA[<p>Device IP is a non EU country IP.</p><p>User consetn status is accepted.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Change device IP to a non EU country IP.</p><p>2、In TestApp, choose “User consent status" </p><p>to accepted </p><p>3、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>1、In /v1/hbConfig request, parameter </p><p>”consent_status“ is opted_in:</p><p>"user": {</p><p>"gdpr": {</p><p>"consent_source": "publisher",</p><p>"consent_status": "opted_in",</p><p>"consent_timestamp": 1536732869</p><p>}</p><p>}</p><p>2、In /v1/hbConfig response, </p><p>parameter "is_country_data_protected" is false</p><p>"gdpr": {</p><p>"is_country_data_protected": false</p><p>}</p><p>}</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47387" name="User consent status is denied  in non EU countries.">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[81]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[User consent status is denied 
in non EU countries.]]></summary>
	<preconditions><![CDATA[<p>Device IP is a non EU country IP.</p><p>User consetn status is denied.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Change device IP to a non EU country IP.</p><p>2、In TestApp, choose “User consent status" </p><p>to denied </p><p>3、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>1、In /v1/hbConfig request, parameter </p><p>”consent_status“ is opted_out:</p><p>"user": {</p><p>"gdpr": {</p><p>"consent_source": "publisher",</p><p>"consent_status": "opted_out",</p><p>"consent_timestamp": 1536733015</p><p>}</p><p>}</p><p>2、In /v1/hbConfig response, </p><p>parameter "is_country_data_protected" is false</p><p>"gdpr": {</p><p>"is_country_data_protected": false</p><p>}</p><p>}</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47390" name="User consent status is unknown  in EU countries.">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[82]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[User consent status is unknown 
in EU countries.]]></summary>
	<preconditions><![CDATA[<p>Device IP is a EU country IP.</p><p>User consetn status is unknown.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Change device IP to a EU country IP </p><p>(We could use Astrill to switch to Germany IP).</p><p>2、In TestApp, choose “User consent status" </p><p>to unknown （Default）</p><p>3、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>1、In /v1/hbConfig request, parameter </p><p>”consent_status“ is unknown:</p><p>"user": {</p><p>"gdpr": {</p><p>"consent_source": "publisher",</p><p>"consent_status": "unknown",</p><p>"consent_timestamp": 0</p><p>}</p><p>}</p><p>2、In /v1/hbConfig response, </p><p>parameter "is_country_data_protected" is false</p><p>"gdpr": {</p><p>"is_country_data_protected": true</p><p>}</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47393" name="User consent status is accepted  in EU countries.">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[83]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[User consent status is accepted 
in EU countries.]]></summary>
	<preconditions><![CDATA[<p>Device IP is a EU country IP.</p><p>User consetn status is accepted.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Change device IP to a EU country IP </p><p>(We could use Astrill to switch to Germany IP).</p><p>2、In TestApp, choose “User consent status" </p><p>to accepted </p><p>3、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>1、In /v1/hbConfig request, parameter </p><p>”consent_status“ is opted_in:</p><p>"user": {</p><p>"gdpr": {</p><p>"consent_source": "publisher",</p><p>"consent_status": "opted_in",</p><p>"consent_timestamp": 1536732869</p><p>}</p><p>}</p><p>2、In /v1/hbConfig response, </p><p>parameter "is_country_data_protected" is false</p><p>"gdpr": {</p><p>"is_country_data_protected": true</p><p>}</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47396" name="User consent status is denied  in EU countries.">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[84]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[User consent status is denied 
in EU countries.]]></summary>
	<preconditions><![CDATA[<p>Device IP is a EU country IP.</p><p>User consetn status is denied.</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Change device IP to a EU country IP </p><p>(We could use Astrill to switch to Germany IP).</p><p>2、In TestApp, choose “User consent status" </p><p>to denied </p><p>3、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>1、In /v1/hbConfig request, parameter </p><p>”consent_status“ is opted_out:</p><p>"user": {</p><p>"gdpr": {</p><p>"consent_source": "publisher",</p><p>"consent_status": "opted_out",</p><p>"consent_timestamp": 1536733015</p><p>}</p><p>}</p><p>2、In /v1/hbConfig response, </p><p>parameter "is_country_data_protected" is false</p><p>"gdpr": {</p><p>"is_country_data_protected": true</p><p>}</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47399" name="Mopub Adapter - User consent status is unknown">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[85]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Mopub Adapter - User consent status 
is unknown]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is unknown</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to unknown </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>Mopub Adapter wiill not pass user </p><p>consent status to Mopub</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47402" name="Mopub Adapter - User consent status is accepted">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[86]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Mopub Adapter - User consent
status is accepted]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is accepted</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to accepted </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>Mopub Adapter wiil pass user </p><p>consent status of Acceptance to Mopub</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47405" name="Mopub Adapter - User consent status is denied">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[87]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Mopub Adapter - User consent
status is denied]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is denied</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to denied </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>Mopub Adapter wiil pass user</p><p>consent status of denial to Mopub</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47408" name="Unity Adapter - User consent status is unknown">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[88]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Unity Adapter - User consent status 
is unknown]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is unknown</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to unknown </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>Unity Adapter wiill not pass user </p><p>consent status to Unity</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47411" name="Unity Adapter - User consent status is accepted">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[89]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Unity Adapter - User consent
status is accepted]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is accepted</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to accepted </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>Unity Adapter wiil pass user </p><p>consent status of Acceptance to Unity</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47414" name="Unity Adapter - User consent status is denied">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[90]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Unity Adapter - User consent
status is denied]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is denied</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to denied </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>Unity Adapter wiil pass user</p><p>consent status of denial to Unity</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47417" name="AppLovin Adapter - User consent status is unknown">
	<node_order><![CDATA[13]]></node_order>
	<externalid><![CDATA[91]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[AppLovin Adapter - User consent status 
is unknown]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is unknown</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to unknown </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>AppLovin Adapter wiill not pass user </p><p>consent status to AppLovin</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47420" name="AppLovin Adapter - User consent status is accepted">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[92]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[AppLovin Adapter - User consent
status is accepted]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is accepted</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to accepted </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>AppLovin Adapter wiil pass user </p><p>consent status of Acceptance to AppLovin</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47423" name="AppLovin Adapter - User consent status is denied">
	<node_order><![CDATA[15]]></node_order>
	<externalid><![CDATA[93]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[AppLovin Adapter - User consent
status is denied]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is denied</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to denied </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>AppLovin Adapter wiil pass user</p><p>consent status of denial to AppLovin</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47426" name="AdMob Adapter - User consent status is unknown">
	<node_order><![CDATA[16]]></node_order>
	<externalid><![CDATA[94]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[AdMob Adapter - User consent status 
is unknown]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is unknown</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to unknown </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>AdMob Adapter wiill not pass user </p><p>consent status to AdMob</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47429" name="AdMob Adapter - User consent status is accepted">
	<node_order><![CDATA[17]]></node_order>
	<externalid><![CDATA[95]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[AdMob Adapter - User consent
status is accepted]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is accepted</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to accepted </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>AdMob Adapter wiil not pass user </p><p>consent status of Acceptance to AdMob</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47432" name="AdMob Adapter - User consent status is denied">
	<node_order><![CDATA[18]]></node_order>
	<externalid><![CDATA[96]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[AdMob Adapter - User consent
status is denied]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is denied</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to denied </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>AdMob Adapter wiil pass user</p><p>consent status of denial to AdMob</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47435" name="InMobi Adapter - User consent status is unknown">
	<node_order><![CDATA[19]]></node_order>
	<externalid><![CDATA[97]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[InMobi Adapter - User consent status 
is unknown]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is unknown</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to unknown </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>InMobi Adapter wiill not pass user </p><p>consent status to InMobi</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47438" name="InMobi Adapter - User consent status is accepted">
	<node_order><![CDATA[20]]></node_order>
	<externalid><![CDATA[98]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[InMobi Adapter - User consent
status is accepted]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is accepted</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to accepted </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>InMobi Adapter wiil pass user </p><p>consent status of Acceptance to InMobi</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47441" name="InMobi Adapter - User consent status is denied">
	<node_order><![CDATA[21]]></node_order>
	<externalid><![CDATA[99]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[InMobi Adapter - User consent
status is denied]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is denied</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to denied </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>InMobi Adapter wiil pass user</p><p>consent status of denial to AdMob</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47444" name="InMobi Adapter - isGDPRRequired? method need to test in EU countery or none EU country">
	<node_order><![CDATA[22]]></node_order>
	<externalid><![CDATA[100]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[InMobi Adapter in non - EU countries]]></summary>
	<preconditions><![CDATA[<p>in non - EU countries</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, in non - EU countries</p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>InMobi Adapter wiil pass </p><p>isGDPRRequired falseo AdMob</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47448" name="Vungle Adapter - User consent status is unknown">
	<node_order><![CDATA[24]]></node_order>
	<externalid><![CDATA[101]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Vungle Adapter - User consent status 
is unknown]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is unknown</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to unknown </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>Vungle Adapter wiill not pass user </p><p>consent status to Vungle</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47451" name="Vungle Adapter - User consent status is accepted">
	<node_order><![CDATA[25]]></node_order>
	<externalid><![CDATA[102]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Vungle Adapter - User consent
status is accepted]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is accepted</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to accepted </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>Vungle Adapter wiil pass user </p><p>consent status of Acceptance to InMobi</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47454" name="Vungle Adapter - User consent status is denied">
	<node_order><![CDATA[26]]></node_order>
	<externalid><![CDATA[103]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Vungle Adapter - User consent
status is denied]]></summary>
	<preconditions><![CDATA[<p>User consent status </p><p>is denied</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、In TestApp, choose “User consent status" </p><p>to denied </p><p>2、Start Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>Vungle Adapter wiil pass user</p><p>consent status of denial to Vungle</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47457" name="Call updateConsentStatus before startWithAppId">
	<node_order><![CDATA[27]]></node_order>
	<externalid><![CDATA[104]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call updateConsentStatus 
before startWithAppId]]></summary>
	<preconditions><![CDATA[<p>Call updateConsentStatus </p><p>before startWithAppId</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Call updateConsentStatus to </p><p>"unknown, accepted, denied"</p><p>2、Call startWithAppId to start</p><p>Vungle Advanced Auction SDK.</p>]]></actions>
	<expectedresults><![CDATA[<p>Call getCurrentContentStatus can </p><p>get the passed status</p><p>/config request</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47460" name="Call updateConsentStatus after startWithAppId">
	<node_order><![CDATA[28]]></node_order>
	<externalid><![CDATA[105]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Call updateConsentStatus 
after startWithAppId]]></summary>
	<preconditions><![CDATA[<p>Call updateConsentStatus </p><p>after startWithAppId</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Call startWithAppId to start</p><p>Vungle Advanced Auction SDK.</p><p>2、Call updateConsentStatus to </p><p>"unknown, accepted, denied"</p>]]></actions>
	<expectedresults><![CDATA[<p>Call getCurrentContentStatus can </p><p>get the passed status</p><p>other request has the information</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47463" name="Do not call updateConsentStatus after startWithAppId">
	<node_order><![CDATA[29]]></node_order>
	<externalid><![CDATA[106]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[Do not call updateConsentStatus 
after startWithAppId]]></summary>
	<preconditions><![CDATA[<p>Do not call updateConsentStatus </p><p>after startWithAppId</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1、Call startWithAppId to start</p><p>Vungle Advanced Auction SDK.</p><p>2、Do not call updateConsentStatus </p><p>after startWithAppId</p>]]></actions>
	<expectedresults><![CDATA[<p>Call getCurrentContentStatus can </p><p>unknown user consent status</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite><testsuite id="47143" name="View Count Tracking" >
<node_order><![CDATA[7]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="47466" name="Check the view numbers by day should be sent to the /bid endpoint and the /repor">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[107]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[---- Warning ----<br />
TestLink Warning<br />
test case name is too long (103 chars) > 100 => has been truncated<br />
Original name<br />
Check the view numbers by day should be sent to the /bid endpoint and the /report endpoint respectively<br />
---- *** ----<br />
-]]></summary>
	<preconditions><![CDATA[<p>1. Clear the cache;</p><p>2. The bid strategy of the placement is set to header bidding auction (0-autction);</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1. Launch the test app and play an ad;</p><p>2. Quit from the ad playback;</p>]]></actions>
	<expectedresults><![CDATA[<p>1. When the test app sends the request to the /bid endpoint, the request payload should include a parameter view_number_day to track the view numbers by day;</p><p>2. When the test app sends the request to the /report endpoint, the request payload should include a parameter view_number_day to track the view numbers by day;</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47469" name="Check the view numbers by session should be sent to the /bid endpoint and the /report endpoint">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[108]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>1. The bid strategy of the placement is set to header bidding auction (0-auction)</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1. Launch the test app and play an ad;</p><p>2. Quit from the ad playback;</p>]]></actions>
	<expectedresults><![CDATA[<p>1. When the test app sends the request to the /bid endpoint, the request payload should include a parameter view_number_day to track the view numbers by day;</p><p>2. When the test app sends the request to the /report endpoint, the request payload should include a parameter view_number_day to track the view numbers by day;</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47472" name="The view numbers by day should NOT reset to 0 after relaunching the process">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[109]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>1. The bid strategy of the placement is set to header bidding auciton (0-auction);</p><p>2. Play ads for several times;</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1. Kill the process of test app;</p><p>2. Launch the test app and play the ad;</p>]]></actions>
	<expectedresults><![CDATA[<p>1. When the /bid API is called, the parameter view_number_day should NOT be set to 0;</p><p>2. When the /report API is called, the parameter view_number_day should NOT be set to 0;</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47475" name="The view numbers by session should reset to 0 after relaunching the process">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[110]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>1. The bid strategy of the placement is set to header bidding auction (0-auction)</p><p>2. Play ads for several times;</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1. Kill the process of test app;</p>]]></actions>
	<expectedresults><![CDATA[<p>1. When the /bid API is called, the parameter view_number_session should be set to 0;</p><p>2. When the /report API is called, the parameter view_number_session should be set to 0;</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47478" name="The view numbers by day should reset to 0 after 6:00 AM">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[111]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>1. The bid strategy of the placement is set to header bidding auction (0-auction)</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1. Set the system time before 06:00 AM, play the ads for several times;</p><p>2. Wait until the time after 06:00 AM, play the ad;</p>]]></actions>
	<expectedresults><![CDATA[<p>In the /bid endpoint and /report endpoint:</p><p>1. The parameter view_number_day should be set to 0 after 06:00 AM;</p><p>2. The parameter view_number_session should NOT be set to 0 after 06:00 AM;</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47481" name="Check the view count tracking should support the interstitial ads;">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[112]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>-</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1. Play an interstitial ad;</p>]]></actions>
	<expectedresults><![CDATA[<p>In the /bid endpoint and /report endpoint:</p><p>1. The parameters view_number_day and view_number_session should be increased;</p><p></p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47484" name="Check the view count tracking shiould support the rewarded ads;">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[113]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>-</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>1. Play a rewarded ad;</p>]]></actions>
	<expectedresults><![CDATA[<p>In the /bid endpoint and the /report endpoint:</p><p>1. The parameters view_number_day and view_number_session should be increased;</p>]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite></testsuite><testsuite id="47136" name="Non-Functional" >
<node_order><![CDATA[2]]></node_order>
<details><![CDATA[]]></details> 
<testsuite id="47487" name="Performance" >
<node_order><![CDATA[1]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="47682" name="Measure the physical size of VungleAdvancedAuctionSDK embed VungleSDK">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[133]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47684" name="Measure the physical size of VungleAdvancedAuctionSDK without VungleSDK">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[134]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47686" name="Measure the physical size of VngSDK(inmobi)">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[135]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47688" name="Measure the physical size of VungleSDK">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[136]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47690" name="Measure the physical size of AdMob SDK">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[137]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47692" name="Measure the physical size of AppLovinSDK">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[138]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47694" name="Measure the physical size of UnityAds">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[139]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47696" name="Measure the physical size of MoPubSDKFramework">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[140]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47698" name="Measure the physical size of Facebook SDK">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[141]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47700" name="Measure the memory consumption of VungleAdvancedAuctionSDK">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[142]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47702" name="CPU">
	<node_order><![CDATA[1010]]></node_order>
	<externalid><![CDATA[143]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>

<testcase internalid="47704" name="Memory Leak">
	<node_order><![CDATA[1011]]></node_order>
	<externalid><![CDATA[144]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[]]></summary>
	<preconditions><![CDATA[]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>

</testcase>
</testsuite><testsuite id="47488" name="Platform Compatibility" >
<node_order><![CDATA[2]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="47489" name="iOS 8">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[114]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>-</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47492" name="iOS 9">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[115]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>-</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47495" name="iOS 10">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[116]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>-</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47498" name="iOS 11">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[117]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>-</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="47501" name="iOS 12">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[118]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[-]]></summary>
	<preconditions><![CDATA[<p>-</p>]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[]]></actions>
	<expectedresults><![CDATA[]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite></testsuite></testsuite>
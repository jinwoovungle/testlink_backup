<?xml version="1.0" encoding="UTF-8"?>
<testsuite id="" name="" >
<node_order><![CDATA[]]></node_order>
<details><![CDATA[]]></details> 
<testsuite id="3485" name="Android SDK Full Regression test Suite For Mraid Ad's" >
<node_order><![CDATA[1]]></node_order>
<details><![CDATA[<p>
	Android SDK Full Regression test Suite For Mraid Ad&#39;s</p>
]]></details> 

<testcase internalid="3486" name="Headers">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[1]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Vungle specific headers in&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">all API calls from SDK</span></p>
]]></summary>
	<preconditions><![CDATA[<p style="margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">
	Check Vungle specific headers in all API calls</p>
<ul style="margin: 10px 0px 0px; padding-left: 22px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">
	<li>
		/new API call</li>
	<li>
		<span style="color: rgb(0, 0, 0);">/config API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/requestAd API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/requestStreamingAd API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/reportAd API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/sessionStart API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/endSession API call</span></li>
</ul>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Check API call header with CharlesProxy</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	&quot;X-VUNGLE-TIMEZONE&quot;<br />
	&quot;X-VUNGLE-LANGUAGE&quot;<br />
	&quot;X-VUNGLE-BUNDLE-ID&quot;<br />
	&quot;User-Agent&quot;</p>
<p>
	<br />
	should be included in HTTP header with valid data</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3489" name="ifa">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[2]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check if &quot;ifa&quot; param is included in all API call from SDK</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check if &quot;ifa&quot;&nbsp;<span style="color: rgb(128, 0, 128);">param</span>&nbsp;is included in all API calls</span></p>
<ul style="margin: 10px 0px 0px; padding-left: 22px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">
	<li>
		/new<span style="color: rgb(0, 0, 0);">&nbsp;API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/config API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/requestAd API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/requestStreamingAd API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/reportAd API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/startSession API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/endSession API call</span></li>
</ul>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Check API call header with CharlesProxy</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	&quot;ifa&quot; is included with valid data</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3492" name="Request and Response and its format-  /new API Call">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[3]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">During SDK initialization process, check /new API call is sent</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check&nbsp;</span><strong style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">/new</strong><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;API call is sent with correct data&nbsp;</span><u style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">only one time</u><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;after installing app.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Install <strong><u>new</u></strong> Test App (delete previous installed Test Apps)</li>
	<li>
		Start the SDK</li>
	<li>
		Check API call Request and Response with CharlesProxy</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		/new API is sent <u>only one time</u> after app install</li>
	<li>
		<span style="color: rgb(0,0,0);">This API call should be&nbsp;GET</span></li>
	<li>
		request has the correct data</li>
	<li>
		response has the correct data (HTTP 20X)</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3495" name="Request and Response and its format -/config API Call">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[4]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">During SDK initialization process, check /config API call is sent.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check /</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">config</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;API call is sent with correct data every time an app is launched, after periodic update interval, and upon returning from the background</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol style="margin: 0px; padding-left: 22px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">
	<li>
		Start Test app</li>
	<li>
		Check API call header with CharlesProxy</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul style="margin: 0px; padding-left: 22px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">
	<li>
		/config&nbsp;API is sent</li>
	<li>
		This API call should be&nbsp;POST</li>
	<li>
		request has the&nbsp;correct data</li>
	<li>
		response has the correct&nbsp;data</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3498" name="Request and Response and its format-/requestStreamingAd API Call">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[5]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Verify that SDK request streaming Ad when appropriate.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	When playing an Ad, the SDK should attempt to request a Streaming (Exchange) ad if the user is under WiFi and the optIn flag from config is set to true.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol style="margin: 0px; padding-left: 22px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">
	<li>
		Start QA TestApp</li>
	<li>
		Wait to get a pre-cached ad.</li>
	<li>
		Verify that&nbsp;<em>optIn&nbsp;</em>is&nbsp;<em>true</em>&nbsp;and that the test device/simulator is on WiFi</li>
	<li>
		Attempt to play an Ad.</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	StreamingAd should play</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3501" name="Request and Response and its format- /sessionStart API Call">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[6]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">During the SDK initialization process, check /</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">sessionStart</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;API call is sent.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check /<span style="color: rgb(0, 0, 0);">sessionStart</span></span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;API call is sent with correct data every time an app is launched.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Check API call header with CharlesProxy</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		/sessionStart API is sent</li>
	<li>
		This API call should be&nbsp;POST</li>
	<li>
		request has the correct data</li>
	<li>
		response has the correct data</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3504" name="Request and Response and its format- /sessionEnd API Call">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[7]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">When an app is terminated, or&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">is</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;backgrounded check /</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">sessionEnd</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;API call is sent</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check /</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">sessionEnd</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;API call is sent with correct data every time&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">an app is terminated, or&nbsp;<span style="color: rgb(128, 0, 128);">is</span>&nbsp;backgrounded</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		And, terminate an app, or send it to background
		<ol>
			<li>
				Check API call Request and Response with CharlesProxy</li>
		</ol>
	</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		/sessionEnd API is sent</li>
	<li>
		This API call should be&nbsp;POST</li>
	<li>
		request has the correct data</li>
	<li>
		response has the correct data</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3507" name="Invalid Response - Malformed JSON">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[8]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">When response from</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">API</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;calls are malformed, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check if SDK behaves accordingly when it gets malformed response from &quot;config&quot; API call</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		&nbsp;&nbsp;&nbsp; Prepare &quot;malformed&quot; response (invalid JSON)</li>
	<li>
		&nbsp;&nbsp;&nbsp; Start Test app</li>
	<li>
		&nbsp;&nbsp;&nbsp; Map &quot;config&quot; API call to local or your remote server with CharlesProxy to return malformed response</li>
	<li>
		&nbsp;&nbsp;&nbsp; Check the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	SDK should not crash and should keep retrying to get a valid config.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3510" name="Invalid Response for requestAd - Malformed contains null for every value in the JSON object.">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[9]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">When response from</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">API</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;calls are malformed, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	Verify SDK behavior when it gets a JSON response from requestAd endpoint that contains null for every value in the JSON object.&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;malformed&quot; response</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return a /requestAd response that contains <strong>null</strong> for every value.</li>
	<li>
		Check the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">The SDK should keep retrying requesting Ads until a valid request is retrieved&nbsp; </span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3513" name="Invalid Response - Malformed JSON response from requestAd endpoint that contains empty string">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[10]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">When response from</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">API</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;calls are malformed, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Verify SDK behavior when it gets a JSON response from&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><em><strong><span style="color: rgb(0, 0, 0);">requestAd</span></strong></em>&nbsp;endpoint that contains&nbsp;<strong>empty string (&quot;&quot;)</strong>&nbsp;for every value in the JSON object.</span><br />
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare an JSON response</li>
	<li>
		Map /<span style="color: rgb(0,0,0);">requestStreamingAd</span> API call to local or your remote server with CharlesProxy to return a response with empty string in all of it&#39;s values (take a /requestAd response and set empty string &quot;&quot; for all the values).</li>
	<li>
		Start Test App</li>
	<li>
		Allow the test App to request an Ad</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">The SDK should play a cached Ad (for any adTypes: local, MRAID, third party)</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3516" name="Invalid Response from &quot;config&quot; API call includes Null values">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[11]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">When response from API calls includes Null values in it, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check if SDK behaves accordingly when the response from&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;<em><strong>config</strong></em>&quot; API call includes Null values</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare response with null values</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;config&quot; API call to local or your remote server with CharlesProxy to return response with Null values</li>
	<li>
		Check the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	SDK should not crash and should keep retrying to get a valid config. The SDK should be able to play Ads.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3519" name="Invalid Response from &quot;requestAd&quot; API call includes Null values">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[12]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">When response from API calls includes Null values in it, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check if SDK behaves accordingly when the response from&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;<em><strong><span style="color: rgb(0, 0, 0);">requestAd</span></strong></em>&quot; API call includes Null values</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare response with all values set as null</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<span style="color: rgb(0,0,0);">requestAd</span>&quot; API call to local or your remote server with CharlesProxy to return response with Null values</li>
	<li>
		Check the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">The SDK should keep retrying requesting Ads until a valid request is retrieved </span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3522" name="Invalid Response - contains empty string (&quot;&quot;) for requestStreamingAd">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[13]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">When response from API calls includes Null values in it, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check if SDK behaves accordingly when the response from the&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;<em><strong><span style="color: rgb(0, 0, 0);">requestStreamingAd</span></strong></em>&quot;&nbsp;endpoint contains&nbsp;<strong>empty string (&quot;&quot;)</strong>&nbsp;for every value in the JSON object.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare response with all values set as null</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<span style="color: rgb(0,0,0);">requestStreamingAd</span>&quot; API call to local or your remote server with CharlesProxy to return response with Null values</li>
	<li>
		Check the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">The SDK should play a cached Ad (for any adTypes: local, MRAID, third party)</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3525" name="Config Behavior-Manipulate &quot;updateDelay&quot; value in response">
	<node_order><![CDATA[13]]></node_order>
	<externalid><![CDATA[14]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Based on Config Response, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Manipulate &quot;</span><strong style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><em>updateDelay</em>&quot;</strong><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">value in&nbsp;response&nbsp;and see if SDK works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;config&quot; response with manipulated <span style="color: rgb(0,0,0);">&quot;</span><span style="color: rgb(0,0,0);"><em><strong>updateDelay</strong></em>&quot; </span><span style="color: rgb(0,0,0);">value</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<span>config</span>&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check <span>if </span>the SDK behaves <span style="color: rgb(0,0,0);">as expected</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">This parameter determines when to send the next config request</span></li>
	<li>
		<span style="color: rgb(0,0,0);">The parameter expects time in seconds</span></li>
	<li>
		<span style="color: rgb(0,0,0);">You can change the value to 5 seconds for example. The SDK must update the config every 5 seconds. You can easily see that in CharlesProxy</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3528" name="Config Behavior-Manipulate &quot;optIn&quot; value in response">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[15]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Based on Config Response, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Manipulate &quot;</span><em style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>optIn</strong></em><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; value in response and see if SDK works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;config&quot; response with manipulated <span style="color: rgb(0,0,0);">&quot;<em><strong><span style="color: rgb(0,0,0);">optIn</span></strong></em></span><span style="color: rgb(0,0,0);">&quot; </span><span style="color: rgb(0,0,0);">value</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;config&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check if the SDK behaves <span style="color: rgb(0,0,0);">as expected</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">If set to false, no streaming Ads should be played, only cached Ad should get display.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Could be vungle_local or vungle_mraid depending on type</span></li>
	<li>
		<span style="color: rgb(0,0,0);">To test that, set it to false, play a video. The SDK only plays the cached Ad and requestStreamingAd must not be sent. You can tell if that is the case using CharlesProxy</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3534" name="Ad Expiry">
	<node_order><![CDATA[15]]></node_order>
	<externalid><![CDATA[17]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">The SDK should follow the cached ad expiry date.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check how the SDK behave when the cached ad is expired.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;<em><strong><span style="color: rgb(0,0,0);">requestAd</span></strong></em>&quot; response with manipulated <span style="color: rgb(0,0,0);">&quot;<em><strong>expiry</strong></em></span><span style="color: rgb(0,0,0);">&quot; </span><span style="color: rgb(0,0,0);">value to make an ad expire soon</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<span style="color: rgb(0,0,0);">requestAd</span>&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check <span>if </span>the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">The SDK should not display the expired ad.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">The SDK should send new &quot;requestAd&quot;</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3531" name="Config Behavior-Manipulate &quot;connection&quot; value in response">
	<node_order><![CDATA[16]]></node_order>
	<externalid><![CDATA[16]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Based on Config Response, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Manipulate&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;<em><strong>connection</strong></em></span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">value in&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">response</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;and see if SDK works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	<span style="color: rgb(0,0,0);">Manipulate </span><span style="color: rgb(0,0,0);">&quot;<em><strong>connection</strong></em></span><span style="color: rgb(0,0,0);">&quot; </span><span style="color: rgb(0,0,0);">value in </span><span style="color: rgb(0,0,0);">response</span><span style="color: rgb(0,0,0);"> and see if SDK works as expected</span></p>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">By default this is wifi, it could be data as well</span></li>
	<li>
		<span style="color: rgb(0,0,0);">If wifi is selected, the SDK does not try to stream except if the connection is wifi</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3537" name="Low Storage Space">
	<node_order><![CDATA[17]]></node_order>
	<externalid><![CDATA[18]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">The SDK should&nbsp;</span><span style="color:#000000;"><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">behave as expected</span></span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">,when a device doesn&#39;t have enough space to caching an ad assets.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check how the SDK behave when a device doesn&#39;t have enough disk space to cache an ad assets.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare a device with almost full in disk space</li>
	<li>
		Start Test app</li>
	<li>
		Make sure if an ad asset can&#39;t be downloaded since the device doesn&#39;t have enough space</li>
	<li>
		<span>Check <span>if </span>the SDK behaves</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		The SDK should give up downloading the ad asset.</li>
	<li>
		The SDK should try to send &quot;requestAd&quot; again.</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3540" name="Broken asset- when &quot;MP4&quot; assets are broken">
	<node_order><![CDATA[18]]></node_order>
	<externalid><![CDATA[19]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">The SDK should behave as expected, when downloaded assets are broken.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check how the SDK should try to send &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>requestAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; again, when &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>MP4</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; assets are broken.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		<span style="color: rgb(0,0,0);">Prepare broken asset (example, make simple text file (&quot;<em><strong>brokenAsset.txt</strong></em>&quot;), and rename it as &quot;<em><strong>brokenAsset.mp4</strong></em>&quot;, and upload to local server.</span></li>
	<li>
		Prepare &quot;<em><strong><span style="color: rgb(0,0,0);">requestAd</span></strong></em>&quot; response with manipulated <span style="color: rgb(0,0,0);">&quot;url</span><span style="color: rgb(0,0,0);">&quot; </span><span style="color: rgb(0,0,0);">to point to the asset you prepared in #1.</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<em><strong><span style="color: rgb(0,0,0);">requestAd</span></strong></em>&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check if the SDK behaves accordingly</li>
</ol>
<p>
	Test the same thing for &quot;<em><strong>requestStreamingAd</strong></em>&quot; case</p>
<p>
	<span>Test the same thing for MRAID case</span></p>
]]></actions>
	<expectedresults><![CDATA[<p>
	SDK keeps retrying for max of 6 times and the app should not crash.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3543" name="Broken asset-MRAID ONLY">
	<node_order><![CDATA[19]]></node_order>
	<externalid><![CDATA[20]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">The SDK should behave as expected, when downloaded assets are broken.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check how the SDK should try to send &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>requestAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; again, when &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>end card zip</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; assets are broken</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		<span style="color: rgb(0,0,0);">Prepare broken asset (example, make simple text file (&quot;brokenAsset.txt&quot;), and rename it as &quot;brokenAsset.zip&quot;, and upload to local server.</span></li>
	<li>
		Prepare &quot;requestAd&quot; response with manipulated &quot;<span style="color: rgb(0,51,102);"><span style="color: rgb(0,0,0);">postBundle</span>&quot; </span>to point to <span style="color: rgb(128,0,128);">the asset</span> you prepared in #1.</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check if the SDK behaves accordingly</li>
</ol>
<p>
	Test the same thing for &quot;requestStreamingAd&quot; case</p>
<p>
	<span>Test the same thing for MRAID cas</span></p>
]]></actions>
	<expectedresults><![CDATA[<p>
	SDK keeps retrying for max of 6 times and the app should not crash.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3546" name="Broken asset-when &quot;end card zip&quot; assets are broken">
	<node_order><![CDATA[20]]></node_order>
	<externalid><![CDATA[21]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">The SDK should behave as expected, when downloaded assets are broken.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check how the SDK should try to send &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>requestAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; again, when &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>end card zip</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; assets are broken, and restart app before playing it.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare broken asset (example, make simple text file (&quot;brokenAsset.txt&quot;), and rename it as &quot;brokenAsset.zip&quot;, and upload to local server.</li>
	<li>
		Prepare &quot;requestAd&quot; response with manipulated &quot;postBundle&quot; to point to the asset you prepared in #1.</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Let SDK download it</li>
	<li>
		Terminate the app and restart it</li>
	<li>
		Check if the SDK behaves accordingly</li>
</ol>
<p>
	Test the same thing for &quot;requestStreamingAd&quot; case</p>
<p>
	Test the same thing forMRAIDcas</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	SDK keeps retrying for max of 6 times and the app should not crash.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3549" name="Broken asset-&quot;MRAID font&quot; assets are broken">
	<node_order><![CDATA[21]]></node_order>
	<externalid><![CDATA[22]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	The SDK should behave as expected, when downloaded assets are broken.</div>
<div>
	&nbsp;</div>
]]></summary>
	<preconditions><![CDATA[<div>
	&nbsp;</div>
<div>
	Check how the SDK should try to send &quot;requestAd&quot; again, when &quot;MRAID font&quot; assets are broken.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare broken asset (example, make simple text file (&quot;brokenAsset.txt&quot;), and rename it as &quot;brokenAsset.font&quot;, and upload to local server.</li>
	<li>
		Prepare &quot;requestAd&quot; response with manipulated &quot;font param?&quot; to point to the asset you prepared in #1.</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check if the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	SDK keeps retrying for max of 6 times and the app should not crash</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3552" name="Broken asset-when outgoing store requests gets stuck after tapping on download button.">
	<node_order><![CDATA[22]]></node_order>
	<externalid><![CDATA[23]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	&nbsp;</div>
<div>
	The SDK should behave as expected, when downloaded assets are broken.</div>
]]></summary>
	<preconditions><![CDATA[<div>
	Check how the SDK should behave as expected when outgoing store requests gets stuck after tapping on download button on end card</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Play an ad and go to end card</li>
	<li>
		Tap on &quot;download&quot; button</li>
	<li>
		With using Charles &quot;break points&quot; to block &quot;outgoing store requests&quot;</li>
</ol>
<p>
	Test the same thing for &quot;requestStreamingAd&quot; case</p>
<p>
	Test the same thing for MRAID cas</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	-Breaking on the outgoing url should not affect the app,</p>
<p>
	-Outgoing url should not open in the browser,</p>
<p>
	-If user go back to the app it should be at the home screen.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3555" name="Check Vungle MRAID Ads play normally">
	<node_order><![CDATA[23]]></node_order>
	<externalid><![CDATA[24]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check all types of ads playback normally<span class="Apple-tab-span" style="white-space:pre"> </span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><em><strong>Vungle&nbsp;MRAID&nbsp;ad</strong></em>&quot; playback normally</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;<span style="color: rgb(0,0,0);">AdType = vungle_mraid</span>&quot; response for <span style="color: rgb(0,0,0);">requestAd</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<span style="color: rgb(0,0,0);">requestAd</span>&quot; API call to local or your remote server with CharlesProxy to return the response (prepared in #1)</li>
	<li>
		Make sure the SDK get the correct type of ad you specified</li>
	<li>
		Check playback</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Video should be playback normally til, end</span></li>
	<li>
		<span style="color: rgb(0,0,0);">An end-card should be displayed correctly</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check Mraid specific behavior</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Icon overlays such as close, cta, mute are displayed without layout issues</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3558" name="Ad Orientation-without force screen orientation">
	<node_order><![CDATA[24]]></node_order>
	<externalid><![CDATA[25]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Ad should be displayed in the specified orientation, or rotate to the device orientation.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check ad playback orientation without force screen&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">orientation</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Don&#39;t set force landscape or portrait</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check the ad orientation follows <span style="color: rgb(0,0,0);">physical device orientation</span></span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Video and postroll should rotate to the orientation by rotating the device</span></li>
	<li>
		<span style="color: rgb(0,0,0);">The app should adjust accordingly after the Ad is closed or finished</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3561" name="Check sounds play and stop accordingly">
	<node_order><![CDATA[25]]></node_order>
	<externalid><![CDATA[26]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Mute and volume functionality should work accordingly.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check sounds play and stop accordingly</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check sounds behavior</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Sounds should be played once an ad is played</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Sound should stop after close, replay, close</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Sound should stop when app is sent to the background then back</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3564" name="Check restoring volume status of sound">
	<node_order><![CDATA[26]]></node_order>
	<externalid><![CDATA[27]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Mute and volume functionality should work accordingly.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check restoring volume status</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Set device volume to 50%</span></li>
	<li>
		Set <span style="color: rgb(0,0,0);">&quot;start muted&quot; ON in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check sounds behavior</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		An ad should start as muted</li>
	<li>
		If start muted checkbox is unchecked, sound should be unmuted with volume 50% (whatever it set on device originally)</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3567" name="Incentivized option">
	<node_order><![CDATA[27]]></node_order>
	<externalid><![CDATA[28]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check incentivized ad behave as expected.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check incentivized ad behavior</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set <span style="color: rgb(0,0,0);">&quot;incentivized ad&quot; ON in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Try to close ads by X button while an ad is playing back.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check if an <span style="color: rgb(0,0,0);">alert</span> dialog shows up</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">When you tap on close, the SDK should show the <span>dialog which asks</span> &quot;close the Ad or continue watching?&quot;</span></li>
	<li>
		<span style="color: rgb(0,0,0);">If you tap on close, the Ad should be closed.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">If you tap on continue, the Ad should be resumed.</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3570" name="Incentivized option-Check a &quot;customized&quot; alert dialog">
	<node_order><![CDATA[28]]></node_order>
	<externalid><![CDATA[29]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check incentivized ad behave as expected.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check a &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>customized</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">alert</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;dialog when you try to close incentivized ad</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set <span style="color: rgb(0,0,0);">&quot;incentivized ad&quot; ON in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Change &quot;Incentivized Alert Text&quot; in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Try to close ads by X button while an ad is playing back.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check if an <span style="color: rgb(0,0,0);">alert</span> dialog shows up with customized text </span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	Title, Body, Close, and Continue text should be displayed as you customize</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3573" name="Incentivized option-Check if tapping close 2nd time close an ad">
	<node_order><![CDATA[29]]></node_order>
	<externalid><![CDATA[30]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check incentivized ad behave as expected.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check if tapping close 2nd time close an ad</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set <span style="color: rgb(0,0,0);">&quot;incentivized ad&quot; ON in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Try to close ads by X button while an ad is playing back.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check if an <span style="color: rgb(0,0,0);">alert</span> dialog shows up</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Tap &quot;continue&quot; to resume to ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Tap on close again, check ad is closed without alert dialog</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	The ad should be closed without showing an alert dialog.</p>
<p>
	Note:- This happen only for LoopingVideo templates, after one loop is successfully completed.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3576" name="Incentivized option-Check incentivized ad with back button">
	<node_order><![CDATA[30]]></node_order>
	<externalid><![CDATA[31]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check incentivized ad behave as expected.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check incentivized ad with back button (only for Android)</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set &quot;incentivized ad&quot; ON in options tab</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Try to close ads by using back button on device.</li>
	<li>
		Check if an alert dialog shows up</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	When you tap on back button of device, the SDK should show the dialog which asks &quot;close the Ad or continue watching?&quot;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3579" name="Close Button">
	<node_order><![CDATA[31]]></node_order>
	<externalid><![CDATA[32]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;close&quot; button functionality</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;close&quot; button works as expected while playing a video as well as while displaying endcard</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		Push &quot;back button&quot; while an ad is playing</li>
	<li>
		Put the app background and return to the app</li>
	<li>
		Push &quot;back button&quot; while an ad is playing</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Make sure you can close an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Make sure you can close an ad after sending the app to the background</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3582" name="Close Button-Check &quot;back button&quot; on physical device">
	<node_order><![CDATA[32]]></node_order>
	<externalid><![CDATA[33]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;device&#39;s &quot;back&quot; button</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;back button&quot;&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">on physical device works</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;as expected.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		(Enable &quot;back button&quot;)</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Push device&#39;s &quot;back button&quot; while an ad is playing</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">By default you can not use the back button before the close button is displayed.&nbsp;</span></li>
	<li>
		<span style="color: rgb(0,0,0);">If back button is enabled, you can go back and close the ad any time you want.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Applicable to MRAID</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3585" name="Download Button">
	<node_order><![CDATA[33]]></node_order>
	<externalid><![CDATA[34]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;download&quot; button functionality</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>download</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; button works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Go to endcard</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Tap on &quot;download&quot; button</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">The mobile browser (safari for example) should launch without a causing a blank screen</span></li>
	<li>
		<span style="color: rgb(0,0,0);">If the download target URL is an in-app app store location then it should open within the context of the test app. In this case the browser is not launched</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3588" name="Progress Bar">
	<node_order><![CDATA[34]]></node_order>
	<externalid><![CDATA[35]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;progress bar&quot;</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>progress bar</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check progress bar</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Progress bar is displayed</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Progress bar indicates the progress of ad playback duration</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3591" name="Privacy Button">
	<node_order><![CDATA[35]]></node_order>
	<externalid><![CDATA[36]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;privacy&quot; button functionality</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 255);">&nbsp;(Only for Android)</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>privacy</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; button works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check Privacy Icon</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		Privacy icon on video</li>
	<li>
		Privacy icon on end card</li>
	<li>
		When the icon is clicked, the privacy text pops up. If the text is clicked, SDK should redirect browser to Vungle privacy page</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3594" name="Controlling Playback Behavior-Check if the SDK follow the value &quot;Should stream from server&quot; paramete">
	<node_order><![CDATA[36]]></node_order>
	<externalid><![CDATA[37]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Playback should follow the values in response from &quot;requestAd&quot; API call</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">C</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">heck if the SDK follow the value &quot;Should stream from server&quot; parameter in response from &quot;<em><strong>requestAd</strong></em>&quot; API call</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		<span style="color: rgb(0,0,0);">Prepare &quot;requestAd&quot; response with setting &quot;<span style="color: rgb(0,0,0);">Should stream from server</span>&quot; value to false</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Start Test app</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	If set to false only cached Ads (Local or MRAID) should be played even if config OptIn is set to true</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3597" name="Controlling Playback Behavior-Check if the SDK follow the value &quot;expiry&quot; parameter">
	<node_order><![CDATA[37]]></node_order>
	<externalid><![CDATA[38]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Playback should follow the values in response from &quot;requestAd&quot; API call</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">C</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">heck if the SDK follow the value &quot;<em><strong>expiry</strong></em>&quot; parameter in response from &quot;<strong><em>requestAd</em></strong>&quot; API call</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		<span style="color: rgb(0,0,0);">Prepare &quot;requestAd&quot; response with setting &quot;<span style="color: rgb(0,0,0);">expiry</span>&quot; value to sometime soon to be expired (Unix time in second)</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Start Test app</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Wait until an ad is expired</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Expired ads are not played</span></li>
	<li>
		<span style="color: rgb(0,0,0);">the SDK should requestAd again</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Expired ad asset should be removed (hard to test)</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3600" name="Invalid video">
	<node_order><![CDATA[38]]></node_order>
	<externalid><![CDATA[39]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Playback should follow the values in response from &quot;requestAd&quot; API call</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">C</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">heck if the SDK behave as expected when an video asset is broken</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		<span style="color: rgb(0,0,0);">Prepare &quot;requestAd&quot; response with changing &quot;url&quot; point to broken video file </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		Test with invalid Vungle MRAID video</li>
	<li>
		Test with invalidThirdpartystreamingvideo</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	Invalid video should not crash the SDK. The video should be skipped and only end card should be shown.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3603" name="CTA button position">
	<node_order><![CDATA[39]]></node_order>
	<externalid><![CDATA[40]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check CTA button position on Video</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check CTA button position on Video</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start the Test App</li>
	<li>
		Play the Ad</li>
	<li>
		Check the CTA button position on Video</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		CTA button show up in the lower left corner.</li>
	<li>
		It Should not be in the middle and specially when rotating the device</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3606" name="CTA Button behavior">
	<node_order><![CDATA[40]]></node_order>
	<externalid><![CDATA[41]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check CTA button behavior on Video</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check CTA button behavior on Video</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start the Test App</li>
	<li>
		Play the Ad</li>
	<li>
		Click on CTA button on Video</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		CTA should generate no crash on click</li>
	<li>
		CTA redirect to define URL .</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3609" name="Template format">
	<node_order><![CDATA[41]]></node_order>
	<externalid><![CDATA[42]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check template format in response payload of requestAd</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check template format parameter in response payload of requestAd</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Play the MRAID ad</li>
	<li>
		Check template format parameter in response payload of requestAd</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	Template format should be &quot;interstitial&quot;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3612" name="Available memory space">
	<node_order><![CDATA[42]]></node_order>
	<externalid><![CDATA[43]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check &quot;bytesAvailable&quot; parameter in request payload of requestAd</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check &quot;bytesAvailable&quot; parameter in request payload of requestAd</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Play the Ad</li>
	<li>
		Check template format parameter in request payload of requestAd</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	&quot;bytesAvailable&quot; parameter should be present in request payload of requestAd &amp; ReportAd.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3615" name="batterySaverEnabled">
	<node_order><![CDATA[43]]></node_order>
	<externalid><![CDATA[44]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check &quot;batterySaverEnabled&quot; parameter in request payload of requestAd</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check &quot;batterySaverEnabled&quot; parameter in request payload of requestAd</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Check &quot;batterySaverEnabled&quot; parameter in request payload&nbsp;of requestAd</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	If &quot;low power&quot; mode is enable value of &quot;batterySaverEnabled&quot; parameter is true and if low power mode is disable in this case , parameter dosen&#39;t display in requestAd playload.</p>
<p>
	(Only available in Android for above 5.1.1os version.)</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3618" name="batteryState">
	<node_order><![CDATA[44]]></node_order>
	<externalid><![CDATA[45]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check &quot;batteryState&quot; parameter in request payload of requestAd</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check &quot;batteryState&quot; parameter in request payload of requestAd</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Check &quot;batteryState&quot; parameter in request payload&nbsp;of requestAd</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	Battery charging states display as per device state are full, unknown, charging, unplugged</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3621" name="batteryLevel">
	<node_order><![CDATA[45]]></node_order>
	<externalid><![CDATA[46]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check &quot;batteryLevel&quot; parameter in request payload of requestAd</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check &quot;batteryLevel&quot; parameter in request payload of requestAd</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Check &quot;batteryLevel&quot; parameter in request payload&nbsp;of requestAd</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	App Should display batteryLevel in a float value from 0 to 1 (amount of battery life available)</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3624" name="Close button behavior for MRAID video">
	<node_order><![CDATA[46]]></node_order>
	<externalid><![CDATA[47]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Based on &quot;INCENTIVIZED_CLOSE_BUTTON_DELAY_SECONDS&quot; and &quot;CLOSE_BUTTON_DELAY_SECONDS&quot; parameter value, the SDK should behave accordingly</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Based on &quot;INCENTIVIZED_CLOSE_BUTTON_DELAY_SECONDS&quot; and &quot;CLOSE_BUTTON_DELAY_SECONDS&quot; parameter value, the SDK should behave accordingly</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	1)&quot;INCENTIVIZED_CLOSE_BUTTON_DELAY_SECONDS&quot;: &quot;9999&quot;,<br />
	&quot;CLOSE_BUTTON_DELAY_SECONDS&quot;: &quot;5&quot;,</p>
<p>
	2)&quot;INCENTIVIZED_CLOSE_BUTTON_DELAY_SECONDS&quot;: &quot;5&quot;,<br />
	&quot;CLOSE_BUTTON_DELAY_SECONDS&quot;: &quot;9999&quot;,</p>
<p>
	3)&quot;INCENTIVIZED_CLOSE_BUTTON_DELAY_SECONDS&quot;: &quot;9999&quot;,<br />
	&quot;CLOSE_BUTTON_DELAY_SECONDS&quot;: &quot;9999&quot;,</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	1) This case, when it&#39;s not incentivized, it should use the &quot;CLOSE_BUTTON_DELAY_SECONDS&quot; value,<br />
	which is 5. if it&#39;s incentivized, use 9999, which is skippable close button.</p>
<p>
	2) This case, when it&#39;s not incentivized, it should use the &quot;CLOSE_BUTTON_DELAY_SECONDS&quot; value,<br />
	which is skippable close button; otherwise, it should delay for 5 seconds.</p>
<p>
	3) This case, when it&#39;s not incentivized, it should use the &quot;CLOSE_BUTTON_DELAY_SECONDS&quot; value,<br />
	which is 9999 which is skippable close button.. if it&#39;s incentivized, use 9999, which is skippable close button.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3627" name="ReportAd API call">
	<node_order><![CDATA[47]]></node_order>
	<externalid><![CDATA[48]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	&quot;reportAd&quot; should include all necessary values</p>
]]></summary>
	<preconditions><![CDATA[<div>
	&quot;reportAd&quot; should be sent with all necessary value as expected</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">close end card</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check <span style="color: rgb(0,0,0);">&quot;<em><strong>reportAd</strong></em>&quot; through CharlesProxy</span></span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Report Ad includes Close, CTA, Download, Replay, Ad duration, Demographic, app_id</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Report Ad includes Device Info, Pub ID, Incentivized, Plays Start, Length, Viewed</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Report Ad includes&nbsp;ttDownload,&nbsp;adStartTime, URL,&nbsp;Demo,&nbsp;pubAppId, ID, Campaign, etc</span></li>
	<li>
		<span style="color: rgb(0,0,0);">All requests should include device volume information</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Make sure the reportAd JSON is valid</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3630" name="ReportAd API call-should be sent in case an app is terminated before end card is displayed.">
	<node_order><![CDATA[48]]></node_order>
	<externalid><![CDATA[49]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	&quot;reportAd&quot; should be sent correctly in different situations</p>
]]></summary>
	<preconditions><![CDATA[<div>
	&quot;reportAd&quot; should be sent in case an app is terminated before end card is displayed&nbsp;</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Terminate an app before end card is displayed </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Reopen an app and see &quot;reportAd&quot; is sent through CharlesProxy</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">&quot;reportAd&quot; should be sent next time an app is opened</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3633" name="ReportAd API call-should be sent in case an app is terminated while end card is displayed">
	<node_order><![CDATA[49]]></node_order>
	<externalid><![CDATA[50]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>reportAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; should be sent correctly in different situations</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;<em><strong>reportAd</strong></em>&quot; should be sent&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">in case an app is terminated while end card is displayed</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Wait for end card <span style="color: rgb(128,0,128);">to be</span> displayed</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Terminate an app before closing end card</span></li>
	<li>
		Reopen an app and see &quot;reportAd&quot; is sent through CharlesProxy</li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">&quot;reportAd&quot; should be sent next time an app is opened</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3636" name="ReportAd API call-should be sent multiple times in case a user tries to navigate away from App">
	<node_order><![CDATA[50]]></node_order>
	<externalid><![CDATA[51]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>reportAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; should be sent correctly in different situations</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;<em><strong>reportAd</strong></em>&quot; should be sent multiple times&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">in case a&nbsp;user tries to navigate away from the test app.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Wait for end card to be displayed</li>
	<li>
		Tap privacy icon and go to privacy page on Android, or skip to the next step for iOS</li>
	<li>
		background an app</li>
	<li>
		<span class="inline-comment-marker valid" data-ref="bddd9bff-9cd2-4a08-83cf-b6533b371eb1">Tap download to go to app store</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	Only one time</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3639" name="ReportAd API call-Check &quot;incentivized&quot; flag">
	<node_order><![CDATA[51]]></node_order>
	<externalid><![CDATA[52]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>reportAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; should be sent with correct values</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>incentivized</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; flag in &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>reportAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; request set correctly</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		Set &quot;incentivized ad&quot; ON in options tab</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		After ad finishes, close it and check &quot;reportAd&quot; request in CharlesProxy</li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	&quot;incentivized&quot; parameter in &quot;reportAd&quot; request API call is set to &quot;1&quot;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3642" name="ReportAd API call-Check &quot;User tag or name&quot; value">
	<node_order><![CDATA[52]]></node_order>
	<externalid><![CDATA[53]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>reportAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; should be sent with correct values</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">User tag or name</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; value in &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>reportAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; request set correctly</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		Set <span style="color: rgb(0,0,0);">&quot;incentivized ad&quot; ON in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">After ad finishes, close it and check &quot;reportAd&quot; request in CharlesProxy</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span>&quot;</span><span style="color: rgb(0,0,0);">User tag or name</span><span>&quot; value should be set correctly</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3645" name="ReportAd API call-Placement field">
	<node_order><![CDATA[53]]></node_order>
	<externalid><![CDATA[54]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	&quot;reportAd&quot; should be sent with correct values</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Placement field</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set value on placement field<span style="color: rgb(0,0,0);"> in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">After ad finishes, close it and check &quot;reportAd&quot; request in CharlesProxy</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	Placement field should be present in reportAd.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3648" name="ReportAd API call-User defined Keys">
	<node_order><![CDATA[54]]></node_order>
	<externalid><![CDATA[55]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	&quot;reportAd&quot; should be sent with correct values</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">User defined Keys</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set value in options tab</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		After ad finishes, close it and check &quot;reportAd&quot; request in CharlesProxy.</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">Keys 1-8 should be present in reportAd.</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3651" name="ReportAd API call-Tracking Information">
	<node_order><![CDATA[55]]></node_order>
	<externalid><![CDATA[56]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	&quot;reportAd&quot; should be sent with correct values</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Tracking Information</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		After ad finishes, close it and check &quot;reportAd&quot; request in CharlesProxy for device info.</li>
</ol>
<p>
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	Tracking information should be present in&nbsp;<span style="color: rgb(0,0,0);">requestStreamingAd</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3654" name="TPAT tracking- should be called at time in an ad video duration">
	<node_order><![CDATA[56]]></node_order>
	<externalid><![CDATA[57]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">TPAT tracking should be called as expected</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">TPAT tracking should be called at t</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">ime in an ad video duration</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		TPAT tracking should be called at 0% of video duration</li>
	<li>
		TPAT tracking should be called at 25% of video duration</li>
	<li>
		TPAT tracking should be called at 50% of video duration</li>
	<li>
		TPAT tracking should be called at 75% of video duration</li>
	<li>
		TPAT tracking should be called at 100% of video duration</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3657" name="TPAT trackingshould be called when mute or unmute">
	<node_order><![CDATA[57]]></node_order>
	<externalid><![CDATA[58]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	TPAT tracking should be called as expected</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">TPAT tracking should be called w</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">hen mute or unmute</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Tap mute/unmute button</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span>TPAT tracking should be called</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3660" name="TPAT tracking-should be called when a video is closed">
	<node_order><![CDATA[58]]></node_order>
	<externalid><![CDATA[59]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	TPAT tracking should be called as expected</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">TPAT tracking should be called w</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">hen a video is closed</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">while playing a video, close it</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span>TPAT tracking should be called</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3663" name="TPAT tracking-should be called at end card">
	<node_order><![CDATA[59]]></node_order>
	<externalid><![CDATA[60]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	TPAT tracking should be called as expected</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">TPAT tracking should be called at end card</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">wait for end card displayed</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span>TPAT tracking should be called</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3666" name="TPAT tracking-should be called when a user taps &quot;download&quot;">
	<node_order><![CDATA[60]]></node_order>
	<externalid><![CDATA[61]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	TPAT tracking should be called as expected</p>
]]></summary>
	<preconditions><![CDATA[<p>
	TPAT tracking should be called when a user taps &quot;download&quot;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">wait for end card displayed</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Tap download to go to app store</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span>TPAT tracking should be called</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3669" name="Sleepcode">
	<node_order><![CDATA[61]]></node_order>
	<externalid><![CDATA[62]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	The SDK should obey the sleep code from &quot;requestAd&quot; response</p>
]]></summary>
	<preconditions><![CDATA[<p>
	When ad server returns sleep for &quot;requestAd&quot; call, the SDK should sleep for time specified in response.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Prepare &quot;<em><strong><span style="color: rgb(0,0,0);">requestAd</span></strong></em>&quot; response with sleep case</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<em><strong><span style="color: rgb(0,0,0);">requestAd</span></strong></em>&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		The SDK should sleep</li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	The SDK shouldn&#39;t send &quot;<em><strong>requestAd</strong></em>&quot; until the sleep time is over</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3672" name="Backgrounding- shouldn't crash while in the background">
	<node_order><![CDATA[62]]></node_order>
	<externalid><![CDATA[63]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	App not to be crash when it&#39;s in background</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">An app shouldn&#39;t crash while in the background</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		Send app to the background for 5 minutes</li>
	<li>
		Play video and send to background. While playing the video, swipe down notifications, video should pause. Swipe back notifications, the video should now resume.</li>
	<li>
		<strong>Android: </strong>When the device&#39;s lock screen is set to none(Settings-&gt;Security-&gt;Screen lock none on Android devices), play video, off/lock the device, on/unlock the device again, the video should resume after the device is unlocked</li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	The App shouldn&#39;t crash at any point</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3675" name="SDK Update">
	<node_order><![CDATA[63]]></node_order>
	<externalid><![CDATA[64]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">SDK should continue working correctly when updating an App that uses a newer version of the SDK.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">The SDK should work correctly when it is updated from older version.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Keep an app with older SDK installed</li>
	<li>
		Make sure that an ad was cached with the older SDK version.</li>
	<li>
		Update it with new app with newer SDK (<strong>don&#39;t manually delete the older app</strong>)</li>
	<li>
		Start new Test App</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Smoke Test</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	The SDK should work as expected</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3678" name="Gradient Template">
	<node_order><![CDATA[64]]></node_order>
	<externalid><![CDATA[65]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check Gradient template behave normally on SDK</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check Gradient template behave normally on SDK</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Check all assets of gradient template download properly.</li>
	<li>
		Check all the native icons on video as well as on end card.</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li style="list-style-type: none;background-image: none;">
		<ul>
			<li>
				Gradient template should behave normally on SDK</li>
			<li>
				All native icons should display on video as well as on end card without any overlapping or hiding issue.</li>
			<li>
				Gradient template should show privacy icon on video as well as on end card.</li>
		</ul>
	</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3681" name="diMVP Template">
	<node_order><![CDATA[65]]></node_order>
	<externalid><![CDATA[66]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check diMVP template behave normally on SDK</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check diMVP template behave normally on SDK</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Check all assets of diMVP template download properly.</li>
	<li>
		Check all the native icons on video as well as on end card.</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li style="list-style-type: none;background-image: none;">
		<ul>
			<li>
				diMVP template should behave normally on SDK</li>
			<li>
				All native icons should display on video as well as on end card without any overlapping or hiding issue.</li>
			<li>
				diMVP template should show privacy icon on video as well as on end card.</li>
		</ul>
	</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3684" name="Looping Template">
	<node_order><![CDATA[66]]></node_order>
	<externalid><![CDATA[67]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Looping template behave normally on SDK</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check Looping template behave normally on SDK</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Check all assets of Looping template download properly.</li>
	<li>
		Check all the native icons on video as well as on end card.</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li style="list-style-type: none;background-image: none;">
		<ul>
			<li>
				Looping template should behave normally on SDK</li>
			<li>
				All native icons should display on video as well as on end card without any overlapping or hiding issue.</li>
			<li>
				Looping template should show privacy icon on video as well as on end card.</li>
		</ul>
	</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3687" name="Carousal Template">
	<node_order><![CDATA[67]]></node_order>
	<externalid><![CDATA[68]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check Carousal template behave normally on SDK</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check Carousal template behave normally on SDK</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Check all assets of Carousal template download properly.</li>
	<li>
		Check all the native icons on video as well as on end card.</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li style="list-style-type: none;background-image: none;">
		<ul>
			<li>
				Carousal template should behave normally on SDK</li>
			<li>
				All native icons should display on video as well as on end card without any overlapping or hiding issue.</li>
			<li>
				Carousal template should show privacy icon on video as well as on end card.</li>
		</ul>
	</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3690" name="Video Ad Overlay template">
	<node_order><![CDATA[68]]></node_order>
	<externalid><![CDATA[69]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check VideoAd Overlay template behave normally on SDK</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check VideoAd Overlay template behave normally on SDK</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Check all assets of VideoAd Overlay template download properly.</li>
	<li>
		Check all the native icons on video as well as on end card.</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li style="list-style-type: none;background-image: none;">
		<ul>
			<li>
				VideoAd Overlay template should behave normally on SDK</li>
			<li>
				All native icons should display on video as well as on end card without any overlapping or hiding issue.</li>
			<li>
				VideoAd Overlay template should show privacy icon on video as well as on end card.</li>
		</ul>
	</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3693" name="Device language update in SDK">
	<node_order><![CDATA[69]]></node_order>
	<externalid><![CDATA[70]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">Device language should update by SDK</span></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	<div>
		&nbsp;</div>
	<div>
		1) Install the App.</div>
	<div>
		2) Select any language from setting menu of device.</div>
</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	&nbsp;</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Set charles proxy.</div>
<div>
	2)Select any language from device setting menu.</div>
<div>
	3)Install the App.</div>
<div>
	4)Initialise the App</div>
<div>
	5)Observe the requestAd (Header) API in charles&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	Selected language should reflected in header of requestAd API.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="7463" name="view discripancy">
	<node_order><![CDATA[70]]></node_order>
	<externalid><![CDATA[143]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check and compare eventID in response of rquestAd and reportAd</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1)Install the App on Android/iOS device</p>
<p>
	2)set charles Proxy.&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Install the App on Android/iOS device and set charles Proxy. &nbsp;</div>
<div>
	2)Enter multiple placement ID.</div>
<div>
	4)Initialize the App and play the Ad.</div>
<div>
	5)Observe the event IDin response of requestAd and reportAd.</div>
<div>
	6)after playing Ad observe new event ID for new request. and kill the App.</div>
<div>
	7)Reopen the App and play the Ad.</div>
<div>
	8)Observe the eventID in reportAd.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1) before killing App eventID should same in &nbsp;response of requestAd and reportAd.</div>
<div>
	2)Before killing note down new requestAd&#39;s eventID it should same in reportAd when user reopen the app play the ad.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<div>
	kill app</div>
<div>
	Minimize app</div>
<div>
	before and after download of assets.</div>
<div>
	------------------------------------------------------------------------------------<br />
	<div>
		1) Initialize the app and play the ad</div>
	<div>
		2) After ad experience is closed Report Ad will be sent, Observer it in charles</div>
	<div>
		3) In the request section all below parameters should be sent</div>
	<div>
		4) kill the app and also take the app to background to ensue the ad experiance is interrupted and replay the ad&#39;s</div>
</div>
<p>
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	the report ad parameters should be correct for all iterations of the reportAd</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<div>
	Setup pub apps to server ad as below</div>
<div>
	Only Mraid,</div>
<div>
	Only Legacy,</div>
<div>
	Only Streaming,</div>
<div>
	All Ad Types.<span class="Apple-tab-span" style="white-space:pre"> </span><br />
	<br />
	--------------------------------------<br />
	<div>
		1) Initialize the app and play the ad</div>
	<div>
		2) After ad experience is closed Report Ad will be sent, Observer it in charles</div>
	<div>
		3) In the request section all below parameters should be sent</div>
	<div>
		4) kill the app and also take the app to background to ensue the ad experiance is interrupted and replay the ad&#39;s</div>
</div>
<p>
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	the report ad parameters should be correct for all the scenarios irrespective of any ad Type, App killed, App put to background, Ad experience interrupted.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="7469" name="Mute/Unmute Ad">
	<node_order><![CDATA[71]]></node_order>
	<externalid><![CDATA[145]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check effect of Mute/Unmute Ad on other Apps</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1) Install the App on Android device</div>
<div>
	2) set charles Proxy.&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1) Play music from Play Music</div>
<div>
	2) Open and initialise our App</div>
<div>
	3) Play an Ad with mute /unmute option</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	When Ad ends music should resume.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="7472" name="Device Volume">
	<node_order><![CDATA[72]]></node_order>
	<externalid><![CDATA[146]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check device volume when mute/unmute Ad playon APP</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1) Install the App on Android/iOS device</div>
<div>
	&nbsp;</div>
<div>
	2) set charles Proxy.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Put device volume 0 before starting &nbsp;vungle App</div>
<div>
	2)Open app tap on Start with mute option and play the ad.</div>
<div>
	3)After playing ad and close end card</div>
<div>
	4)Come back on App.</div>
<div>
	5)Try increase / decrease the media volume</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	Media &nbsp;volume should be changeable on device.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="7490" name="isnetworkmetered">
	<node_order><![CDATA[73]]></node_order>
	<externalid><![CDATA[151]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	It monitors the signal quality and IP protocol and if ever the internet connection is secured or not.</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1) Install the App on Android/iOS device</div>
<div>
	&nbsp;</div>
<div>
	2) set charles Proxy.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1) Initialize the app and play the ad</div>
<div>
	2) After ad experience is closed Report Ad will be sent, Observer it in charles</div>
<div>
	3) In the request section isnetworkmetered will be sent</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	boolean value should be sent for the is networkmonitored field.</div>
<div>
	It monitors the signal quality and IP protocol and if ever the internet connection is secured or not.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="7481" name="Report Ad - AdStartTime">
	<node_order><![CDATA[74]]></node_order>
	<externalid><![CDATA[149]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	verify if the Ad start time is correct</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1) Install the App on Android/iOS device</div>
<div>
	&nbsp;</div>
<div>
	2) set charles Proxy.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1) Initialize the app and play the ad</div>
<div>
	2) After ad experience is closed Report Ad will be sent, Observe it in charles</div>
<div>
	3) In the request section AdStartTime parameter will be sent to the server, it is a unix timestamp.</div>
<div>
	4) Convert the time-stamp in local time and check if the starting time-stamp of the ad experience is correct.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	AdStartTime is the starting time of the Ad experience.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="7484" name="Report Ad - app_id">
	<node_order><![CDATA[75]]></node_order>
	<externalid><![CDATA[150]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	app_id is a combination of the Event id and App id</div>
<div>
	&nbsp;</div>
<div>
	App id. Example value: $0${&quot;app_id&quot;:&quot;439873467&quot;,&quot;eventID&quot;:&quot;58700deab6820b082c271bed&quot;}</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1) Install the App on Android/iOS device</div>
<div>
	&nbsp;</div>
<div>
	2) set charles Proxy.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1) Initialize the app and play the ad</div>
<div>
	2) After ad experience is closed Report Ad will be sent, Observer it in charles</div>
<div>
	3) In the request section app_id will be sent</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	Event_id should be the same as received in the Request_Ad / ads response for that particular ad.</div>
<div>
	&nbsp;</div>
<div>
	Event_id should be unique for all the ad&#39;s played.</div>
<div>
	&nbsp;</div>
<div>
	App_id should be the appid SHA key as displayed in the application main screen</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite><testsuite id="3696" name="Android SDK Full Regression test Suite For Legacy Ad's" >
<node_order><![CDATA[2]]></node_order>
<details><![CDATA[<p>
	Android SDK Full Regression test Suite For Legacy Ad&#39;s</p>
]]></details> 

<testcase internalid="3697" name="Headers">
	<node_order><![CDATA[0]]></node_order>
	<externalid><![CDATA[71]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Vungle specific headers in&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">all API calls from SDK</span></p>
]]></summary>
	<preconditions><![CDATA[<p style="margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">
	Check Vungle specific headers in all API calls</p>
<ul style="margin: 10px 0px 0px; padding-left: 22px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">
	<li>
		/new API call</li>
	<li>
		<span style="color: rgb(0, 0, 0);">/config API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/requestAd API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/requestStreamingAd API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/reportAd API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/sessionStart API call</span></li>
	<li>
		<span style="color: rgb(0, 0, 0);">/endSession API call</span></li>
</ul>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Check API call header with CharlesProxy</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	&quot;X-VUNGLE-TIMEZONE&quot;<br />
	&quot;X-VUNGLE-LANGUAGE&quot;<br />
	&quot;X-VUNGLE-BUNDLE-ID&quot;<br />
	&quot;User-Agent&quot;</p>
<p>
	<br />
	should be included in HTTP header with valid data</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3700" name="Request and Response and its format-  /new API Call">
	<node_order><![CDATA[1]]></node_order>
	<externalid><![CDATA[72]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">During SDK initialization process, check /new API call is sent</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check&nbsp;</span><strong style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">/new</strong><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;API call is sent with correct data&nbsp;</span><u style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">only one time</u><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;after installing app.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Install <strong><u>new</u></strong> Test App (delete previous installed Test Apps)</li>
	<li>
		Start the SDK</li>
	<li>
		Check API call Request and Response with CharlesProxy</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		/new API is sent <u>only one time</u> after app install</li>
	<li>
		<span style="color: rgb(0,0,0);">This API call should be&nbsp;GET</span></li>
	<li>
		request has the correct data</li>
	<li>
		response has the correct data (HTTP 20X)</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3703" name="Request and Response and its format -/config API Call">
	<node_order><![CDATA[2]]></node_order>
	<externalid><![CDATA[73]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">During SDK initialization process, check /config API call is sent.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check /</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">config</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;API call is sent with correct data every time an app is launched, after periodic update interval, and upon returning from the background</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol style="margin: 0px; padding-left: 22px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">
	<li>
		Start Test app</li>
	<li>
		Check API call header with CharlesProxy</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul style="margin: 0px; padding-left: 22px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">
	<li>
		/config&nbsp;API is sent</li>
	<li>
		This API call should be&nbsp;POST</li>
	<li>
		request has the&nbsp;correct data</li>
	<li>
		response has the correct&nbsp;data</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3706" name="Request and Response and its format-/requestStreamingAd API Call">
	<node_order><![CDATA[3]]></node_order>
	<externalid><![CDATA[74]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Verify that SDK request streaming Ad when appropriate.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	When playing an Ad, the SDK should attempt to request a Streaming (Exchange) ad if the user is under WiFi and the optIn flag from config is set to true.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol style="margin: 0px; padding-left: 22px; color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">
	<li>
		Start QA TestApp</li>
	<li>
		Wait to get a pre-cached ad.</li>
	<li>
		Verify that&nbsp;<em>optIn&nbsp;</em>is&nbsp;<em>true</em>&nbsp;and that the test device/simulator is on WiFi</li>
	<li>
		Attempt to play an Ad.</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3709" name="Request and Response and its format- /sessionStart API Call">
	<node_order><![CDATA[4]]></node_order>
	<externalid><![CDATA[75]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">During the SDK initialization process, check /</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">sessionStart</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;API call is sent.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check /<span style="color: rgb(0, 0, 0);">sessionStart</span></span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;API call is sent with correct data every time an app is launched.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Check API call header with CharlesProxy</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		/sessionStart API is sent</li>
	<li>
		This API call should be&nbsp;POST</li>
	<li>
		request has the correct data</li>
	<li>
		response has the correct data</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3712" name="Request and Response and its format- /sessionEnd API Call">
	<node_order><![CDATA[5]]></node_order>
	<externalid><![CDATA[76]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">When an app is terminated, or&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">is</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;backgrounded check /</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">sessionEnd</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;API call is sent</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check /</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">sessionEnd</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;API call is sent with correct data every time&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">an app is terminated, or&nbsp;<span style="color: rgb(128, 0, 128);">is</span>&nbsp;backgrounded</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		And, terminate an app, or send it to background
		<ol>
			<li>
				Check API call Request and Response with CharlesProxy</li>
		</ol>
	</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		/sessionEnd API is sent</li>
	<li>
		This API call should be&nbsp;POST</li>
	<li>
		request has the correct data</li>
	<li>
		response has the correct data</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3715" name="Invalid Response - Malformed JSON">
	<node_order><![CDATA[6]]></node_order>
	<externalid><![CDATA[77]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">When response from</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">API</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;calls are malformed, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check if SDK behaves accordingly when it gets malformed response from &quot;config&quot; API call</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		&nbsp;&nbsp;&nbsp; Prepare &quot;malformed&quot; response (invalid JSON)</li>
	<li>
		&nbsp;&nbsp;&nbsp; Start Test app</li>
	<li>
		&nbsp;&nbsp;&nbsp; Map &quot;config&quot; API call to local or your remote server with CharlesProxy to return malformed response</li>
	<li>
		&nbsp;&nbsp;&nbsp; Check the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	SDK should not crash and should keep retrying to get a valid config. The SDK should be able to play Ads.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3718" name="Invalid Response for requestAd - Malformed contains null for every value in the JSON object.">
	<node_order><![CDATA[7]]></node_order>
	<externalid><![CDATA[78]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">When response from</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">API</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;calls are malformed, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	Verify SDK behavior when it gets a JSON response from requestAd endpoint that contains null for every value in the JSON object.&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;malformed&quot; response</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return a /requestAd response that contains <strong>null</strong> for every value.</li>
	<li>
		Check the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">The SDK should keep retrying requesting Ads until a valid request is retrieved&nbsp; </span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3721" name="Invalid Response - Malformed JSON response from requestAd endpoint that contains empty string">
	<node_order><![CDATA[8]]></node_order>
	<externalid><![CDATA[79]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">When response from</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">API</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;calls are malformed, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Verify SDK behavior when it gets a JSON response from&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><em><strong><span style="color: rgb(0, 0, 0);">requestAd</span></strong></em>&nbsp;endpoint that contains&nbsp;<strong>empty string (&quot;&quot;)</strong>&nbsp;for every value in the JSON object.</span><br />
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare an JSON response</li>
	<li>
		Map /<span style="color: rgb(0,0,0);">requestStreamingAd</span> API call to local or your remote server with CharlesProxy to return a response with empty string in all of it&#39;s values (take a /requestAd response and set empty string &quot;&quot; for all the values).</li>
	<li>
		Start Test App</li>
	<li>
		Allow the test App to request an Ad</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">The SDK should play a cached Ad (for any adTypes: local, MRAID, third party)</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3724" name="Invalid Response from &quot;config&quot; API call includes Null values">
	<node_order><![CDATA[9]]></node_order>
	<externalid><![CDATA[80]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">When response from API calls includes Null values in it, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check if SDK behaves accordingly when the response from&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;<em><strong>config</strong></em>&quot; API call includes Null values</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare response with null values</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;config&quot; API call to local or your remote server with CharlesProxy to return response with Null values</li>
	<li>
		Check the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	SDK should not crash and should keep retrying to get a valid config. The SDK should be able to play Ads.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3730" name="Invalid Response - contains empty string (&quot;&quot;) for requestStreamingAd">
	<node_order><![CDATA[10]]></node_order>
	<externalid><![CDATA[82]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">When response from API calls includes Null values in it, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check if SDK behaves accordingly when the response from the&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;<em><strong><span style="color: rgb(0, 0, 0);">requestStreamingAd</span></strong></em>&quot;&nbsp;endpoint contains&nbsp;<strong>empty string (&quot;&quot;)</strong>&nbsp;for every value in the JSON object.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare response with all values set as null</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<span style="color: rgb(0,0,0);">requestStreamingAd</span>&quot; API call to local or your remote server with CharlesProxy to return response with Null values</li>
	<li>
		Check the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">The SDK should play a cached Ad (for any adTypes: local, MRAID, third party)</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3733" name="Config Behavior-Manipulate &quot;updateDelay&quot; value in response">
	<node_order><![CDATA[11]]></node_order>
	<externalid><![CDATA[83]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Based on Config Response, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Manipulate &quot;</span><strong style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><em>updateDelay</em>&quot;</strong><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">value in&nbsp;response&nbsp;and see if SDK works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;config&quot; response with manipulated <span style="color: rgb(0,0,0);">&quot;</span><span style="color: rgb(0,0,0);"><em><strong>updateDelay</strong></em>&quot; </span><span style="color: rgb(0,0,0);">value</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<span>config</span>&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check <span>if </span>the SDK behaves <span style="color: rgb(0,0,0);">as expected</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">This parameter determines when to send the next config request</span></li>
	<li>
		<span style="color: rgb(0,0,0);">The parameter expects time in seconds</span></li>
	<li>
		<span style="color: rgb(0,0,0);">You can change the value to 5 seconds for example. The SDK must update the config every 5 seconds. You can easily see that in CharlesProxy</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3736" name="Config Behavior-Manipulate &quot;threshold&quot; value in response">
	<node_order><![CDATA[12]]></node_order>
	<externalid><![CDATA[84]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Based on Config Response, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Manipu</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">late &quot;<em><strong>threshold</strong></em>&quot; value in response and see if SDK works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;config&quot; response with manipulated <span style="color: rgb(0,0,0);">&quot;<em><strong><span style="color: rgb(0,0,0);">threshold</span></strong></em></span><span style="color: rgb(0,0,0);">&quot; </span><span style="color: rgb(0,0,0);">value</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;config&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check <span>if </span>the SDK behaves <span style="color: rgb(0,0,0);">as expected</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">First, the SDK tries to stream an Ad then</span></li>
	<li>
		<span style="color: rgb(0,0,0);">If requestStreamingAd is not returned within this threshold in milliseconds, a cached Ad is played</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Cached Ad could be local or MRAID depending on AdType</span></li>
	<li>
		<span style="color: rgb(0,0,0);">To test that, set this parameter to a small number, you should see requestStreamingAd message going out however the cached Ad is expected to play instead</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3739" name="Config Behavior-Manipulate &quot;bufferStreamingWait&quot; value in response">
	<node_order><![CDATA[13]]></node_order>
	<externalid><![CDATA[85]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Based on Config Response, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Manipulate &quot;</span><em style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong><span class="inline-comment-marker" data-ref="59cf593a-6f33-48e1-84ed-ce52f0849b56">bufferStreamingWait</span></strong></em><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; value in response and see if SDK works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;config&quot; response with manipulated <span style="color: rgb(0,0,0);">&quot;<em><strong><span style="color: rgb(0,0,0);">bufferStreamingWait</span></strong></em></span><span style="color: rgb(0,0,0);">&quot; </span><span style="color: rgb(0,0,0);">value</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;config&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check <span>if </span>the SDK behaves <span style="color: rgb(0,0,0);">as expected</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	N/A</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3742" name="Config Behavior-Manipulate &quot;optIn&quot; value in response">
	<node_order><![CDATA[14]]></node_order>
	<externalid><![CDATA[86]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Based on Config Response, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Manipulate &quot;</span><em style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>optIn</strong></em><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; value in response and see if SDK works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;config&quot; response with manipulated <span style="color: rgb(0,0,0);">&quot;<em><strong><span style="color: rgb(0,0,0);">optIn</span></strong></em></span><span style="color: rgb(0,0,0);">&quot; </span><span style="color: rgb(0,0,0);">value</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;config&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check if the SDK behaves <span style="color: rgb(0,0,0);">as expected</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">If set to false, no streaming Ads are played, only cached</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Could be vungle_local or vungle_mraid depending on type</span></li>
	<li>
		<span style="color: rgb(0,0,0);">To test that, set it to false, play a video. The SDK only plays the cached Ad and requestStreamingAd must not be sent. You can tell if that is the case using CharlesProxy</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3745" name="Config Behavior-Manipulate &quot;connection&quot; value in response">
	<node_order><![CDATA[15]]></node_order>
	<externalid><![CDATA[87]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Based on Config Response, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Manipulate&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;<em><strong>connection</strong></em></span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">value in&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">response</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;and see if SDK works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<p>
	<span style="color: rgb(0,0,0);">Manipulate </span><span style="color: rgb(0,0,0);">&quot;<em><strong>connection</strong></em></span><span style="color: rgb(0,0,0);">&quot; </span><span style="color: rgb(0,0,0);">value in </span><span style="color: rgb(0,0,0);">response</span><span style="color: rgb(0,0,0);"> and see if SDK works as expected</span></p>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">By default this is wifi, it could be data as well</span></li>
	<li>
		<span style="color: rgb(0,0,0);">If wifi is selected, the SDK does not try to stream except if the connection is wifi</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3748" name="Ad Expiry">
	<node_order><![CDATA[16]]></node_order>
	<externalid><![CDATA[88]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">The SDK should follow the cached ad expire date.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check how the SDK behave when the cached ad is expired.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;<em><strong><span style="color: rgb(0,0,0);">requestAd</span></strong></em>&quot; response with manipulated <span style="color: rgb(0,0,0);">&quot;<em><strong>expiry</strong></em></span><span style="color: rgb(0,0,0);">&quot; </span><span style="color: rgb(0,0,0);">value to make an ad expire soon</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<span style="color: rgb(0,0,0);">requestAd</span>&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check <span>if </span>the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">The SDK should not display the expired ad.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">The SDK should send new &quot;requestAd&quot;</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3751" name="Low Storage Space">
	<node_order><![CDATA[17]]></node_order>
	<externalid><![CDATA[89]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">The SDK should&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">behave as expected</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">,when a device doesn&#39;t have enough space to caching an ad asset</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check how the SDK behave when a device doesn&#39;t have enough disk space to cache an ad asset.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare a device with almost full in disk space</li>
	<li>
		Start Test app</li>
	<li>
		Make sure if an ad asset can&#39;t be downloaded since the device doesn&#39;t have enough space</li>
	<li>
		<span>Check <span>if </span>the SDK behaves</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		The SDK should give up downloading the ad asset.</li>
	<li>
		The SDK should try to send &quot;requestAd&quot; again.</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3754" name="Broken asset- when &quot;MP4&quot; assets are broken">
	<node_order><![CDATA[18]]></node_order>
	<externalid><![CDATA[90]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">The SDK should behave as expected, when downloaded assets are broken.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check how the SDK should try to send &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>requestAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; again, when &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>MP4</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; assets are broken.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		<span style="color: rgb(0,0,0);">Prepare broken asset (example, make simple text file (&quot;<em><strong>brokenAsset.txt</strong></em>&quot;), and rename it as &quot;<em><strong>brokenAsset.mp4</strong></em>&quot;, and upload to local server.</span></li>
	<li>
		Prepare &quot;<em><strong><span style="color: rgb(0,0,0);">requestAd</span></strong></em>&quot; response with manipulated <span style="color: rgb(0,0,0);">&quot;url</span><span style="color: rgb(0,0,0);">&quot; </span><span style="color: rgb(0,0,0);">to point to the asser you prepared in #1.</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<em><strong><span style="color: rgb(0,0,0);">requestAd</span></strong></em>&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check if the SDK behaves accordingly</li>
</ol>
<p>
	Test the same thing for &quot;<em><strong>requestStreamingAd</strong></em>&quot; case</p>
<p>
	<span>Test the same thing for MRAID case</span></p>
]]></actions>
	<expectedresults><![CDATA[<p>
	SDK keeps retrying for max of 6 times and the app should not crash.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3757" name="Broken asset-when &quot;end card zip&quot; assets are broken">
	<node_order><![CDATA[19]]></node_order>
	<externalid><![CDATA[91]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">The SDK should behave as expected, when downloaded assets are broken.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check how the SDK should try to send &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>requestAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; again, when &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>end card zip</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; assets are broken, and restart app before playing it.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare broken asset (example, make simple text file (&quot;brokenAsset.txt&quot;), and rename it as &quot;brokenAsset.zip&quot;, and upload to local server.</li>
	<li>
		Prepare &quot;requestAd&quot; response with manipulated &quot;postBundle&quot; to point to the asset you prepared in #1.</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Let SDK download it</li>
	<li>
		Terminate the app and restart it</li>
	<li>
		Check if the SDK behaves accordingly</li>
</ol>
<p>
	Test the same thing for &quot;requestStreamingAd&quot; case</p>
<p>
	Test the same thing for MRAID case</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	SDK keeps retrying for max of 6 times and the app should not crash.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3760" name="Broken asset-when outgoing store requests gets stuck after tapping on download button.">
	<node_order><![CDATA[20]]></node_order>
	<externalid><![CDATA[92]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	&nbsp;</div>
<div>
	The SDK should behave as expected, when downloaded assets are broken.</div>
]]></summary>
	<preconditions><![CDATA[<div>
	Check how the SDK should behave as expected when outgoing store requests gets stuck after tapping on download button on end card</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Play an ad and go to end card</li>
	<li>
		Tap on &quot;download&quot; button</li>
	<li>
		With using Charles &quot;break points&quot; to block &quot;outgoing store requests&quot;</li>
</ol>
<p>
	Test the same thing for &quot;requestStreamingAd&quot; case</p>
<p>
	Test the same thing for MRAID case</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	Breaking on the outgoing url will not affect the app,</p>
<p>
	&nbsp;</p>
<p>
	its just that the outgoing url will not open in the browser,</p>
<p>
	&nbsp;</p>
<p>
	if we go back to the app it will be at the home screen.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3763" name="Check Vungle pre-cached Ads play normally">
	<node_order><![CDATA[21]]></node_order>
	<externalid><![CDATA[93]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check all types of ads playback normally</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><em><strong>Vungle pre-cached ad</strong></em>&quot; playback normally</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;<span style="color: rgb(0,0,0);">AdType = vungle_local</span>&quot; response for <span style="color: rgb(0,0,0);">requestAd</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<span style="color: rgb(0,0,0);">requestAd</span>&quot; API call to local or your remote server with CharlesProxy to return the response (prepared in #1)</li>
	<li>
		Make sure the SDK get the correct type of ad you specified</li>
	<li>
		Check playback</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Video should be playback normally til, end</span></li>
	<li>
		<span style="color: rgb(0,0,0);">An end-card should be displayed correctly</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Icon overlays such as close, cta, mute are displayed without layout issues</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3727" name="Invalid Response from &quot;requestAd&quot; API call includes Null values">
	<node_order><![CDATA[22]]></node_order>
	<externalid><![CDATA[81]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">When response from API calls includes Null values in it, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check if SDK behaves accordingly when the response from&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;<em><strong><span style="color: rgb(0, 0, 0);">requestAd</span></strong></em>&quot; API call includes Null values</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare response with all values set as null</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<span style="color: rgb(0,0,0);">requestAd</span>&quot; API call to local or your remote server with CharlesProxy to return response with Null values</li>
	<li>
		Check the SDK behaves accordingly</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">The SDK should keep retrying requesting Ads until a valid request is retrieved </span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3766" name="Ad Orientation-without force screen orientation">
	<node_order><![CDATA[23]]></node_order>
	<externalid><![CDATA[94]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Ad should be displayed in the specified orientation, or rotate to the device orientation.</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check ad playback orientation without force screen&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">orientation</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Don&#39;t set force landscape nor portrait</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check the ad orientation follows <span style="color: rgb(0,0,0);">physical device orientation</span></span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Video and postroll should rotate to the orientation by rotating the device</span></li>
	<li>
		<span style="color: rgb(0,0,0);">The app should adjust accordingly after the Ad is closed or finished</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3769" name="Check &quot;start muted&quot; Sound Functionality">
	<node_order><![CDATA[24]]></node_order>
	<externalid><![CDATA[95]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Mute and volume functionality should work accordingly.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>start muted</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; functionality works correctly</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set <span style="color: rgb(0,0,0);">&quot;<em><strong>start muted</strong></em>&quot; ON in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check the ad is played in silent</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		The ad should be played in silent</li>
	<li>
		If you unmute while the video is playing, the sound should be turned back on</li>
</ul>
<p>
	Not applicable to MRAID ads right now</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3772" name="Check &quot;mute&quot; and &quot;unmute&quot; Sound functionality">
	<node_order><![CDATA[25]]></node_order>
	<externalid><![CDATA[96]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Mute and volume functionality should work accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>mute</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; and &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>unmute</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; functionality work correctly</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Tap &quot;<em><strong>mute</strong></em>&quot; and &quot; <em><strong>unmute</strong></em>&quot; button</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check sounds muted, and unmuted accordingly</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		Sound should mute or unmute accordingly</li>
	<li>
		Increasing the volume should unmute the sound and the icon should be updated as well</li>
</ul>
<p>
	Not applicable to MRAID ads right now</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3775" name="Check sounds play and stop accordingly">
	<node_order><![CDATA[26]]></node_order>
	<externalid><![CDATA[97]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Mute and volume functionality should work accordingly.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check sounds play and stop accordingly</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check sounds behavior</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Sounds should be played once an ad is played</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Sound should stop after close, replay, close</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Sound should stop when app is sent to the background then back</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3778" name="Check restoring volume status of sound">
	<node_order><![CDATA[27]]></node_order>
	<externalid><![CDATA[98]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Mute and volume functionality should work accordingly.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check restoring volume status</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Set device volume to 50%</span></li>
	<li>
		Set <span style="color: rgb(0,0,0);">&quot;start muted&quot; ON in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check sounds behavior</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		An ad should start as muted</li>
	<li>
		Afterunmutewith unmute button, sound should be unmuted with volume 50% (whatever it set on device originally)</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3781" name="Incentivized option">
	<node_order><![CDATA[28]]></node_order>
	<externalid><![CDATA[99]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check incentivized ad behave as expected.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check incentivized ad behavior</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set <span style="color: rgb(0,0,0);">&quot;incentivized ad&quot; ON in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Try to close ads by X button while an ad is playing back.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check if an <span style="color: rgb(0,0,0);">alert</span> dialog shows up</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">When you tap on close, the SDK should show the <span>dialog which asks</span> &quot;close the Ad or continue watching?&quot;</span></li>
	<li>
		<span style="color: rgb(0,0,0);">If you tap on close, the Ad should be closed.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">If you tap on continue, the Ad should be resumed.</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3784" name="Incentivized option-Check a &quot;customized&quot; alert dialog">
	<node_order><![CDATA[29]]></node_order>
	<externalid><![CDATA[100]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check incentivized ad behave as expected.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check a &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>customized</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">alert</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;dialog when you try to close incentivized ad</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set <span style="color: rgb(0,0,0);">&quot;incentivized ad&quot; ON in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Change &quot;Incentivized Alert Text&quot; in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Try to close ads by X button while an ad is playing back.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check if an <span style="color: rgb(0,0,0);">alert</span> dialog shows up with customized text </span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	Title, Body, Close, and Continue text should be displayed as you customize</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3787" name="Incentivized option-Check if tapping close 2nd time close an ad">
	<node_order><![CDATA[30]]></node_order>
	<externalid><![CDATA[101]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check incentivized ad behave as expected.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check if tapping close 2nd time close an ad</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set <span style="color: rgb(0,0,0);">&quot;incentivized ad&quot; ON in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Try to close ads by X button while an ad is playing back.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check if an <span style="color: rgb(0,0,0);">alert</span> dialog shows up</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Tap &quot;continue&quot; to resume to ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Tap on close again, check ad is closed without alert dialog</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	The ad should be closed without showing an alert dialog.</p>
<p>
	<span style="font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">Note:- This happen only for LoopingVideo templates, after one loop is successfully completed.</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3790" name="Incentivized option-Check incentivized ad with back button">
	<node_order><![CDATA[31]]></node_order>
	<externalid><![CDATA[102]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check incentivized ad behave as expected.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check incentivized ad with back button (only for Android)</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set &quot;incentivized ad&quot; ON in options tab</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Try to close ads by using back button on device.</li>
	<li>
		Check if an alert dialog shows up</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	When you tap on back button of device, the SDK should show the dialog which asks &quot;close the Ad or continue watching?&quot;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3793" name="Close Button">
	<node_order><![CDATA[32]]></node_order>
	<externalid><![CDATA[103]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;close&quot; button functionality</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;close&quot; button works as expected while playing a video as well as while displaying endcard</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		Push &quot;back button&quot; while an ad is playing</li>
	<li>
		Put the app background and return to the app</li>
	<li>
		Push &quot;back button&quot; while an ad is playing</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Make sure you can close an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Make sure you can close an ad after sending the app to the background</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3796" name="Close Button-Check &quot;back button&quot; on physical device">
	<node_order><![CDATA[33]]></node_order>
	<externalid><![CDATA[104]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;device&#39;s &quot;back&quot; button</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;back button&quot;&nbsp;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(128, 0, 128);">on physical device works</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&nbsp;as expected.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		(Enable &quot;back button&quot;)</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Push device&#39;s &quot;back button&quot; while an ad is playing</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">By default you can not use the back button before the close button is displayed.&nbsp;</span></li>
	<li>
		<span style="color: rgb(0,0,0);">If back button is enabled, you can go back and close the ad any time you want.</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Applicable to MRAID</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3799" name="Download Button">
	<node_order><![CDATA[34]]></node_order>
	<externalid><![CDATA[105]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;download&quot; button functionality</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>download</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; button works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Go to endcard</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Tap on &quot;download&quot; button</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">The mobile browser (safari for example) should launch without a causing a blank screen</span></li>
	<li>
		<span style="color: rgb(0,0,0);">If the download target URL is an in-app app store location then it should open within the context of the test app. In this case the browser is not launched</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3802" name="Progress Bar">
	<node_order><![CDATA[35]]></node_order>
	<externalid><![CDATA[106]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;progress bar&quot;</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>progress bar</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check progress bar</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Progress bar is displayed</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Progress bar indicates the progress of ad playback duration</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3805" name="Privacy Button">
	<node_order><![CDATA[36]]></node_order>
	<externalid><![CDATA[107]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;privacy&quot; button functionality</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 255);">&nbsp;(Only for Android)</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>privacy</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; button works as expected</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check Privacy Icon</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		Privacy icon on video</li>
	<li>
		Privacy icon on end card</li>
	<li>
		When the icon is clicked, the privacy text pops up. If the text is clicked, SDK should launch browser to Vungle privacy page</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3808" name="Controlling Playback Behavior">
	<node_order><![CDATA[37]]></node_order>
	<externalid><![CDATA[108]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Playback should follow the values in response from &quot;requestAd&quot; API call</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">C</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">heck &quot;<em><strong>close</strong></em>&quot; button show up as &quot;<em><strong>showClose</strong></em>&quot; parameter in response from &quot;requestAd&quot; API call</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;<span style="color: rgb(0,0,0);">requestAd</span><span style="color: rgb(0,0,0);">&quot; response with setting &quot;showClose&quot; value to specific time in second</span></li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<span style="color: rgb(0,0,0);">requestAd</span>&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check &quot;close&quot; button shows up at a time you specified</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	&nbsp;&nbsp;&nbsp; &quot;close&quot; button should show up at a time you specified in response</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3811" name="Controlling Playback Behavior-Check &quot;close&quot; button show up as &quot;showCloseIncentivized&quot; parameter">
	<node_order><![CDATA[38]]></node_order>
	<externalid><![CDATA[109]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	&nbsp;</div>
<div>
	Playback should follow the values in response from &quot;requestAd&quot; API call</div>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">C</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">heck &quot;<em><strong>close</strong></em>&quot; button show up as &quot;<em><strong>showCloseIncentivized</strong></em>&quot; parameter in response from &quot;<em><strong>requestAd</strong></em>&quot; API call</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		<span style="color: rgb(0,0,0);">Prepare &quot;requestAd&quot; response with setting &quot;showCloseIncentivized&quot; value to specific time in second</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Start Test app</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad as incentivized</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check &quot;close&quot; button shows up at a time you specified</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	&quot;close&quot; button should show up at a time you specified in response</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3814" name="Controlling Playback Behavior-Check if the SDK follow the value &quot;delay&quot; parameter">
	<node_order><![CDATA[39]]></node_order>
	<externalid><![CDATA[110]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Playback should follow the values in response from &quot;requestAd&quot; API call</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">C</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">heck if the SDK follow the value &quot;<em><strong>delay</strong></em>&quot; parameter in response from &quot;<em><strong>requestAd</strong></em>&quot; API call</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		<span style="color: rgb(0,0,0);">Prepare &quot;<em><strong>requestAd</strong></em>&quot; response with setting &quot;<em><strong>delay</strong></em>&quot; value to specific time in second</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Start Test app</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad and finish it, then close it</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Try to play another ad</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		Second ad should not be played during the time you specified in &quot;delay&quot;</li>
	<li>
		Delay parameters should not affect requestStreamingAd and therefore it is by design for the delay parameter to be ignored when set in requestStreamingAd. When set in requestAd it should work for both Streaming and Cached ads. (need clear description)</li>
	<li>
		Delay parameter only applicable for Legacy Ad (Ad type:- vungle_local)</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3817" name="Controlling Playback Behavior-Check if the SDK follow the value &quot;Should stream from server&quot; paramete">
	<node_order><![CDATA[40]]></node_order>
	<externalid><![CDATA[111]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Playback should follow the values in response from &quot;requestAd&quot; API call</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">C</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">heck if the SDK follow the value &quot;Should stream from server&quot; parameter in response from &quot;<em><strong>requestAd</strong></em>&quot; API call</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		<span style="color: rgb(0,0,0);">Prepare &quot;requestAd&quot; response with setting &quot;<span style="color: rgb(0,0,0);">Should stream from server</span>&quot; value to false</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Start Test app</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	If set to false only cached Ads (Local or MRAID) should be played even if config OptIn is set to true</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3820" name="Controlling Playback Behavior-Check if the SDK follow the value &quot;expiry&quot; parameter">
	<node_order><![CDATA[41]]></node_order>
	<externalid><![CDATA[112]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Playback should follow the values in response from &quot;requestAd&quot; API call</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">C</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">heck if the SDK follow the value &quot;<em><strong>expiry</strong></em>&quot; parameter in response from &quot;<strong><em>requestAd</em></strong>&quot; API call</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		<span style="color: rgb(0,0,0);">Prepare &quot;requestAd&quot; response with setting &quot;<span style="color: rgb(0,0,0);">expiry</span>&quot; value to sometime soon to be expired (Unix time in second)</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Start Test app</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Wait until an ad is expired</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Expired ads are not played</span></li>
	<li>
		<span style="color: rgb(0,0,0);">the SDK should requestAd again</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Expired ad asset should be removed (hard to test)</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3823" name="Invalid video">
	<node_order><![CDATA[42]]></node_order>
	<externalid><![CDATA[113]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Playback should follow the values in response from &quot;requestAd&quot; API call</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">C</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">heck if the SDK behave as expected when an video asset is broken</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		<span style="color: rgb(0,0,0);">Prepare &quot;requestAd&quot; response with changing &quot;url&quot; point to broken video file </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		Test with invalid Vungle MRAID video</li>
	<li>
		Test with invalidThird party streaming video</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	Invalid video should not crash the SDK. The video should be skipped and only end card is shown</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3826" name="CTA button position">
	<node_order><![CDATA[43]]></node_order>
	<externalid><![CDATA[114]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check CTA button position on Video</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check CTA button position on Video</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start the Test App</li>
	<li>
		Play the Ad</li>
	<li>
		Check the CTA button position on Video</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		CTA button show up in the lower left corner.</li>
	<li>
		App Should not be in the middle and specially when rotating the device</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3829" name="CTA Button behavior">
	<node_order><![CDATA[44]]></node_order>
	<externalid><![CDATA[115]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check CTA button behavior on Video</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check CTA button behavior on Video</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start the Test App</li>
	<li>
		Play the Ad</li>
	<li>
		Click on CTA button on Video</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		CTA should generate no crash on click</li>
	<li>
		CTA redirect to define URL .</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3832" name="CTA time show (only for Legacy Ad)">
	<node_order><![CDATA[45]]></node_order>
	<externalid><![CDATA[116]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Based on CTA time show value, the SDK should behave accordingly</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	Manipulate CTA time show value in requestAd and see if SDK works as expected</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;requestAd&quot; with manipulated &quot;time Show&quot; value</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check if the SDK behaves as expected</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		This needs to be changed in the server response (Charles, Dashboard, Mock)</li>
	<li>
		See&nbsp;IOS-66</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3835" name="CTA enable (only for Legacy Ad)">
	<node_order><![CDATA[46]]></node_order>
	<externalid><![CDATA[117]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Manipulate CTA time show value in requestAd and see if SDK works as expected</p>
]]></summary>
	<preconditions><![CDATA[<div>
	Manipulate CTA &quot;enable&quot; value in requestAd and see if SDK works as expected<span class="Apple-tab-span" style="white-space:pre"> </span></div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;requestAd&quot; with manipulated CTA &quot;enable&quot; value</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check if the SDK behaves as expected</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	If false, CTA is not shown<br />
	If true , CTA should shown</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3838" name="CTA click area (only for Legacy Ad)">
	<node_order><![CDATA[47]]></node_order>
	<externalid><![CDATA[118]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Based on CTA click area value, the SDK should behave accordingly</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Manipulate CTA &quot;click area&quot; value in requestAd and see if SDK works as expected</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;requestAd&quot; with manipulated CTA &quot;click area&quot; value</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check if the SDK behaves as expected</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	Click area expand as per &quot;Click area &quot; value</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3841" name="CTA show on click (only for Legacy Ad)">
	<node_order><![CDATA[48]]></node_order>
	<externalid><![CDATA[119]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Based on CTA show on click value, the SDK should behave accordingly</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Manipulate CTA &quot;show on click&quot; value in requestAd and see if SDK works as expected</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Prepare &quot;requestAd&quot; with manipulated CTA &quot;show on click&quot; value</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;requestAd&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		Check if the SDK behaves as expected</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	if &quot;show on click&quot; value is true, then icon should be hidden unless the video is tapped.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3844" name="CTA URLS (only for Legacy Ad)">
	<node_order><![CDATA[49]]></node_order>
	<externalid><![CDATA[120]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Based on CTA URL value, the SDK should behave accordingly</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Manipulate CTA URLS value in requestAd and see if SDK works as expected</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		CTA callToActionDest and callToActionUrl are both valid</li>
	<li>
		CTA callToActionDest is malformed</li>
	<li>
		CTA callToActionDest and callToActionUrl are both malformed</li>
	<li>
		CTA callToActionDest and callToActionUrl are both malformed</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		If Both URL valid:- Always callToActionUrl URL</li>
	<li>
		If callToActionDest is malformed :- callToActionUrl</li>
	<li>
		If Both URL are malformed:- CTA is hide in streamingAd.</li>
	<li>
		If Both URL are malformed:- CTA is show in cachedAd.</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3847" name="Available memory space">
	<node_order><![CDATA[50]]></node_order>
	<externalid><![CDATA[121]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check &quot;bytesAvailable&quot; parameter in request payload of requestAd</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check &quot;bytesAvailable&quot; parameter in request payload of requestAd</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Play the Ad</li>
	<li>
		Check template format parameter in request payload of requestAd</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	&quot;bytesAvailable&quot; parameter should be present in request payload of requestAd &amp; ReportAd.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3850" name="batterySaverEnabled">
	<node_order><![CDATA[51]]></node_order>
	<externalid><![CDATA[122]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check &quot;batterySaverEnabled&quot; parameter in request payload of requestAd</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check &quot;batterySaverEnabled&quot; parameter in request payload of requestAd</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Check &quot;batterySaverEnabled&quot; parameter in request payload&nbsp;of requestAd</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	If &quot;low power&quot; mode is enable value of &quot;batterySaverEnabled&quot; parameter is true and if low power mode is disable in this case , parameter dosen&#39;t display in requestAd playload.</p>
<p>
	(Only available in Android for above 5.1.1os version.)</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3853" name="batteryState">
	<node_order><![CDATA[52]]></node_order>
	<externalid><![CDATA[123]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check &quot;batteryState&quot; parameter in request payload of requestAd</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check &quot;batteryState&quot; parameter in request payload of requestAd</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Check &quot;batteryState&quot; parameter in request payload&nbsp;of requestAd</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	Battery charging states display as per device state are full, unknown, charging, unplugged</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3856" name="batteryLevel">
	<node_order><![CDATA[53]]></node_order>
	<externalid><![CDATA[124]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check &quot;batteryLevel&quot; parameter in request payload of requestAd</p>
]]></summary>
	<preconditions><![CDATA[<p>
	Check &quot;batteryLevel&quot; parameter in request payload of requestAd</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Check &quot;batteryLevel&quot; parameter in request payload&nbsp;of requestAd</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	App &nbsp;Should display batteryLevel in a float value from 0 to 1 (amount of battery life available)</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3859" name="ReportAd API call">
	<node_order><![CDATA[54]]></node_order>
	<externalid><![CDATA[125]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	&quot;reportAd&quot; should include all necessary values</p>
]]></summary>
	<preconditions><![CDATA[<div>
	&quot;reportAd&quot; should be sent with all necessary value as expected</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">close end card</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Check <span style="color: rgb(0,0,0);">&quot;<em><strong>reportAd</strong></em>&quot; through CharlesProxy</span></span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		<span style="color: rgb(0,0,0);">Report Ad includes Close, CTA, Download, Replay, Ad duration, Demographic, app_id</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Report Ad includes Device Info, Pub ID, Incentivized, Plays Start, Length, Viewed</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Report Ad includes&nbsp;ttDownload,&nbsp;adStartTime, URL,&nbsp;Demo,&nbsp;pubAppId, ID, Campaign, etc</span></li>
	<li>
		<span style="color: rgb(0,0,0);">All requests should include device volume information</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Make sure the reportAd JSON is valid</span></li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3862" name="ReportAd API call-should be sent in case an app is terminated before end card is displayed.">
	<node_order><![CDATA[55]]></node_order>
	<externalid><![CDATA[126]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	&quot;reportAd&quot; should be sent correctly in different situations</p>
]]></summary>
	<preconditions><![CDATA[<div>
	&quot;reportAd&quot; should be sent in case an app is terminated before end card is displayed&nbsp;</div>
<div>
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Terminate an app before end card is displayed </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Reopen an app and see &quot;reportAd&quot; is sent through CharlesProxy</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">&quot;reportAd&quot; should be sent next time an app is opened</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3865" name="ReportAd API call-should be sent in case an app is terminated while end card is displayed">
	<node_order><![CDATA[56]]></node_order>
	<externalid><![CDATA[127]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>reportAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; should be sent correctly in different situations</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;<em><strong>reportAd</strong></em>&quot; should be sent&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">in case an app is terminated while end card is displayed</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Wait for end card <span style="color: rgb(128,0,128);">to be</span> displayed</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Terminate an app before closing end card</span></li>
	<li>
		Reopen an app and see &quot;reportAd&quot; is sent through CharlesProxy</li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">&quot;reportAd&quot; should be sent next time an app is opened</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3868" name="ReportAd API call-should be sent multiple times in case a user tries to navigate away from App">
	<node_order><![CDATA[57]]></node_order>
	<externalid><![CDATA[128]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>reportAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; should be sent correctly in different situations</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;<em><strong>reportAd</strong></em>&quot; should be sent multiple times&nbsp;</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">in case a&nbsp;user tries to navigate away from the test app.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Wait for end card to be displayed</li>
	<li>
		Tap privacy icon and go to privacy page on Android, or skip to the next step for iOS</li>
	<li>
		background an app</li>
	<li>
		<span class="inline-comment-marker valid" data-ref="bddd9bff-9cd2-4a08-83cf-b6533b371eb1">Tap download to go to app store</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	Only one time</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3871" name="ReportAd API call-Check &quot;incentivized&quot; flag">
	<node_order><![CDATA[58]]></node_order>
	<externalid><![CDATA[129]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>reportAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; should be sent with correct values</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>incentivized</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; flag in &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>reportAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; request set correctly</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		Set &quot;incentivized ad&quot; ON in options tab</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Ater ad finishes, close it and check &quot;reportAd&quot; request in CharlesProxy</li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	&quot;incentivized&quot; parameter in &quot;reportAd&quot; request API call is set to &quot;1&quot;</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3874" name="ReportAd API call-Check &quot;User tag or name&quot; value">
	<node_order><![CDATA[59]]></node_order>
	<externalid><![CDATA[130]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>reportAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; should be sent with correct values</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Check &quot;</span><span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">User tag or name</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; value in &quot;</span><em style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);"><strong>reportAd</strong></em><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">&quot; request set correctly</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		Set <span style="color: rgb(0,0,0);">&quot;incentivized ad&quot; ON in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">After ad finishes, close it and check &quot;reportAd&quot; request in CharlesProxy</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span>&quot;</span><span style="color: rgb(0,0,0);">User tag or name</span><span>&quot; value should be set correctly</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3877" name="ReportAd API call-Placement field">
	<node_order><![CDATA[60]]></node_order>
	<externalid><![CDATA[131]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	&quot;reportAd&quot; should be sent with correct values</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Placement field</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set value on placement field<span style="color: rgb(0,0,0);"> in options tab</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad</span></li>
	<li>
		<span style="color: rgb(0,0,0);">After ad finishes, close it and check &quot;reportAd&quot; request in CharlesProxy</span></li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	Placement field should be present in reportAd.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3880" name="ReportAd API call-User defined Keys">
	<node_order><![CDATA[61]]></node_order>
	<externalid><![CDATA[132]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	&quot;reportAd&quot; should be sent with correct values</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">User defined Keys</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Set value in options tab</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		Ater ad finishes, close it and check &quot;reportAd&quot; request in CharlesProxy.</li>
</ol>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0,0,0);">Keys 1-8 should be present in reportAd.</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="7496" name="Report Ad - app_id">
	<node_order><![CDATA[62]]></node_order>
	<externalid><![CDATA[153]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	app_id is a combination of the Event id and App id</div>
<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	&nbsp;</div>
<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	App id. Example value: $0${&quot;app_id&quot;:&quot;439873467&quot;,&quot;eventID&quot;:&quot;58700deab6820b082c271bed&quot;}</div>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	1) Install the App on Android/iOS device</div>
<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	&nbsp;</div>
<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	2) set charles Proxy.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	1) Initialize the app and play the ad</div>
<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	2) After ad experience is closed Report Ad will be sent, Observer it in charles</div>
<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	3) In the request section app_id will be sent</div>
]]></actions>
	<expectedresults><![CDATA[<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	Event_id should be the same as received in the Request_Ad / ads response for that particular ad.</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	&nbsp;</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	Event_id should be unique for all the ad&#39;s played.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3883" name="ReportAd API call-Tracking Information">
	<node_order><![CDATA[63]]></node_order>
	<externalid><![CDATA[133]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	&quot;reportAd&quot; should be sent with correct values</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">Tracking Information</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ol>
	<li>
		Start Test app</li>
	<li>
		Init SDK and play an ad</li>
	<li>
		After ad finishes, close it and check &quot;reportAd&quot; request in CharlesProxy for device info.</li>
</ol>
<p>
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	Tracking information should be present in&nbsp;<span style="color: rgb(0,0,0);">requestStreamingAd</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3886" name="TPAT tracking- should be called at time in an ad video duration">
	<node_order><![CDATA[64]]></node_order>
	<externalid><![CDATA[134]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">TPAT tracking should be called as expected</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">TPAT tracking should be called at t</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">ime in an ad video duration</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<ul>
	<li>
		TPAT tracking should be called at 0% of video duration</li>
	<li>
		TPAT tracking should be called at 25% of video duration</li>
	<li>
		TPAT tracking should be called at 50% of video duration</li>
	<li>
		TPAT tracking should be called at 75% of video duration</li>
	<li>
		TPAT tracking should be called at 100% of video duration</li>
</ul>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3889" name="TPAT trackingshould be called when mute or unmute">
	<node_order><![CDATA[65]]></node_order>
	<externalid><![CDATA[135]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	TPAT tracking should be called as expected</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">TPAT tracking should be called w</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">hen mute or unmute</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Tap mute/unmute button</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span>TPAT tracking should be called</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3892" name="TPAT tracking-should be called when a video is closed">
	<node_order><![CDATA[66]]></node_order>
	<externalid><![CDATA[136]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	TPAT tracking should be called as expected</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">TPAT tracking should be called w</span><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">hen a video is closed</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">while playing a video, close it</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span>TPAT tracking should be called</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3895" name="TPAT tracking-should be called at end card">
	<node_order><![CDATA[67]]></node_order>
	<externalid><![CDATA[137]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	TPAT tracking should be called as expected</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">TPAT tracking should be called at end card</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">wait for end card displayed</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span>TPAT tracking should be called</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="7499" name="is network metered">
	<node_order><![CDATA[68]]></node_order>
	<externalid><![CDATA[154]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">It monitors the signal quality and IP protocol and if ever the internet connection is secured or not.</span></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	1) Install the App on Android/iOS device</div>
<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	&nbsp;</div>
<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	2) set charles Proxy.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	1) Initialize the app and play the ad</div>
<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	2) After ad experience is closed Report Ad will be sent, Observer it in charles</div>
<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	3) In the request section isnetworkmetered will be sent</div>
]]></actions>
	<expectedresults><![CDATA[<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	boolean value should be sent for the is networkmonitored field.</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	It monitors the signal quality and IP protocol and if ever the internet connection is secured or not.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3898" name="TPAT tracking-should be called when a user taps &quot;download&quot;">
	<node_order><![CDATA[69]]></node_order>
	<externalid><![CDATA[138]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	TPAT tracking should be called as expected</p>
]]></summary>
	<preconditions><![CDATA[<p>
	TPAT tracking should be called when a user taps &quot;download&quot;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">wait for end card displayed</span></li>
	<li>
		<span style="color: rgb(0,0,0);">Tap download to go to app store</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span>TPAT tracking should be called</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3901" name="Sleepcode">
	<node_order><![CDATA[70]]></node_order>
	<externalid><![CDATA[139]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	The SDK should obey the sleep code from &quot;requestAd&quot; response</p>
]]></summary>
	<preconditions><![CDATA[<p>
	When ad server returns sleep for &quot;requestAd&quot; call, the SDK should sleep for time specified in response.</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Prepare &quot;<em><strong><span style="color: rgb(0,0,0);">requestAd</span></strong></em>&quot; response with sleep case</li>
	<li>
		Start Test app</li>
	<li>
		Map &quot;<em><strong><span style="color: rgb(0,0,0);">requestAd</span></strong></em>&quot; API call to local or your remote server with CharlesProxy to return the response</li>
	<li>
		The SDK should sleep</li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	The SDK shouldn&#39;t send &quot;<em><strong>requestAd</strong></em>&quot; until the sleep time is over</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3904" name="Backgrounding- shouldn't crash while in the background">
	<node_order><![CDATA[71]]></node_order>
	<externalid><![CDATA[140]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	App not to be crash when it&#39;s in background</p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">An app shouldn&#39;t crash while in the background</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Start Test app</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		Send app to the background for 5 minutes</li>
	<li>
		Play video and send to background. While playing the video, swipe down notifications, video should pause. Swipe back notifications, the video should now resume.</li>
	<li>
		<strong>Android: </strong>When the device&#39;s lock screen is set to none(Settings-&gt;Security-&gt;Screen lock none on Android devices), play video, off/lock the device, on/unlock the device again, the video should resume after the device is unlocked</li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	The App shouldn&#39;t crash at any point</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3907" name="SDK Update">
	<node_order><![CDATA[72]]></node_order>
	<externalid><![CDATA[141]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">SDK should continue working correctly when updating an App that uses a newer version of the SDK.</span></p>
]]></summary>
	<preconditions><![CDATA[<p>
	<span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);">The SDK should work correctly when it is updated from older version.</span></p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>2</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<ul>
	<li>
		Keep an app with older SDK installed</li>
	<li>
		Make sure that an ad was cached with the older SDK version.</li>
	<li>
		Update it with new app with newer SDK (<strong>don&#39;t manually delete the older app</strong>)</li>
	<li>
		Start new Test App</li>
	<li>
		<span style="color: rgb(0,0,0);">Init SDK and play an ad </span></li>
	<li>
		<span style="color: rgb(0,0,0);">Smoke Test</span></li>
</ul>
]]></actions>
	<expectedresults><![CDATA[<p>
	The SDK should work as expected</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="3910" name="Device language update in SDK">
	<node_order><![CDATA[73]]></node_order>
	<externalid><![CDATA[142]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">Device language should update by SDK</span></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	<div>
		&nbsp;</div>
	<div>
		1) Install the App.</div>
	<div>
		2) Select any language from setting menu fo device.</div>
</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	&nbsp;</div>
<div style="margin: 0px; padding: 0px; font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; background-color: rgb(238, 238, 238);">
	&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Set charles proxy.</div>
<div>
	2)Select any language from device setting menu.</div>
<div>
	3)Install the App.</div>
<div>
	4)Initialise the App</div>
<div>
	5)Observe the requestAd (Header) API in charles&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	Selected language should reflected in header of requestAd API.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="7466" name="view discripancy">
	<node_order><![CDATA[74]]></node_order>
	<externalid><![CDATA[144]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check and compare eventID in response of rquestAd and reportAd</p>
]]></summary>
	<preconditions><![CDATA[<p>
	1)Install the App on Android/iOS device</p>
<p>
	2)set charles Proxy.&nbsp;</p>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Install the App on Android/iOS device and set charles Proxy. &nbsp;</div>
<div>
	2)Enter multiple placement ID.</div>
<div>
	4)Initialize the App and play the Ad.</div>
<div>
	5)Observe the event IDin response of requestAd and reportAd.</div>
<div>
	6)after playing Ad observe new event ID for new request. and kill the APP.</div>
<div>
	7)Reopen the App and play the Ad.</div>
<div>
	8)Observe the eventID in reportAd.</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1) before killing App eventID should same in &nbsp;response of requestAd and reportAd.</div>
<div>
	2)Before killing note down new requestAd&#39;s eventID it should same in reportAd when user reopen the app play the ad.</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[2]]></step_number>
	<actions><![CDATA[<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	kill app</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	Minimize app</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	before and after download of assets.</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	------------------------------------------------------------------------------------<br />
	<div>
		1) Initialize the app and play the ad</div>
	<div>
		2) After ad experience is closed Report Ad will be sent, Observer it in charles</div>
	<div>
		3) In the request section all below parameters should be sent</div>
	<div>
		4) kill the app and also take the app to background to ensue the ad experiance is interrupted and replay the ad&#39;s</div>
</div>
<p>
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">the report ad parameters should be correct for all iterations of the reportAd</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[3]]></step_number>
	<actions><![CDATA[<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	Setup pub apps to server ad as below</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	Only Mraid,</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	Only Legacy,</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	Only Streaming,</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	All Ad Types.<span class="Apple-tab-span" style="white-space: pre;"> </span><br />
	<br />
	--------------------------------------<br />
	<div>
		1) Initialize the app and play the ad</div>
	<div>
		2) After ad experience is closed Report Ad will be sent, Observer it in charles</div>
	<div>
		3) In the request section all below parameters should be sent</div>
	<div>
		4) kill the app and also take the app to background to ensue the ad experiance is interrupted and replay the ad&#39;s</div>
</div>
<p>
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">the report ad parameters should be correct for all the scenarios irrespective of any ad Type, App killed, App put to background, Ad experience interrupted.</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>

<step>
	<step_number><![CDATA[4]]></step_number>
	<actions><![CDATA[<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	Setup pub apps to server ad as below</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	Only Mraid,</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	Only Legacy,</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	Only Streaming,</div>
<div style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	All Ad Types.<span class="Apple-tab-span" style="white-space: pre;"> </span><br />
	<br />
	--------------------------------------<br />
	<div>
		1) Initialize the app and play the ad</div>
	<div>
		2) After ad experience is closed Report Ad will be sent, Observer it in charles</div>
	<div>
		3) In the request section all below parameters should be sent</div>
	<div>
		4) kill the app and also take the app to background to ensue the ad experiance is interrupted and replay the ad&#39;s</div>
</div>
<p>
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">the report ad parameters should be correct for all the scenarios irrespective of any ad Type, App killed, App put to background, Ad experience interrupted.</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="7475" name="Mute/Unmute Ad">
	<node_order><![CDATA[75]]></node_order>
	<externalid><![CDATA[147]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check effect of Mute/Unmute Ad on other Apps</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1) Install the App on Android device</div>
<div>
	2) set charles Proxy.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Play music from Play Music</div>
<div>
	2)Open and initialise our App</div>
<div>
	3)Play an Ad with mute /unmute option in settings/options.</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	Ad should play accodring to mute/umute option.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="7478" name="Device Volume">
	<node_order><![CDATA[76]]></node_order>
	<externalid><![CDATA[148]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Check device volume when mute/unmute Ad playon APP</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1) Install the App on Android device</div>
<div>
	2) set charles Proxy.&nbsp;</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Put device volume 0 befor starting &nbsp;vungle App</div>
<div>
	2)Open app tap on Start with mute option and play the ad.</div>
<div>
	3)After playing ad and close end card</div>
<div>
	4)Come back on App.</div>
<div>
	5)Try increase / decrease the media volume</div>
]]></actions>
	<expectedresults><![CDATA[<p>
	Media &nbsp;volume should changeable on device.</p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="7493" name="Report Ad - AdStartTime">
	<node_order><![CDATA[77]]></node_order>
	<externalid><![CDATA[152]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	<span style="color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">verify if the Ad start time is correct</span></p>
]]></summary>
	<preconditions><![CDATA[<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	1) Install the App on Android/iOS device</div>
<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	&nbsp;</div>
<div style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial;">
	2) set charles Proxy.</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<table class="simple" style="background: rgb(238, 238, 238); border: thin solid black; font-size: 11.7px; margin: 5px; width: 1073px; color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;">
	<tbody>
		<tr id="step_row_1">
			<td style="vertical-align: top; cursor: pointer;">
				<div style="margin: 0px; padding: 0px;">
					<br class="Apple-interchange-newline" />
					1) Initialize the app and play the ad</div>
				<div style="margin: 0px; padding: 0px;">
					2) After ad experience is closed Report Ad will be sent, Observer it in charles</div>
				<div style="margin: 0px; padding: 0px;">
					3) In the request section AdStartTime parameter will be sent to the server, it is a unix timestamp.</div>
				<div style="margin: 0px; padding: 0px;">
					4) Convert the time-stamp in local time and check if the starting time-stamp of the ad experience is correct.</div>
			</td>
		</tr>
	</tbody>
</table>
<p>
	&nbsp;</p>
]]></actions>
	<expectedresults><![CDATA[<p>
	<span style="color: rgb(0, 0, 0); font-family: &quot;Trebuchet MS&quot;, Arial, Verdana, sans-serif; font-size: 11.7px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(238, 238, 238); text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">AdStartTime is the starting time of the Ad experience</span></p>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite><testsuite id="11055" name="Android Sound test cases" >
<node_order><![CDATA[13]]></node_order>
<details><![CDATA[]]></details> 

<testcase internalid="11056" name="Scenario 01">
	<node_order><![CDATA[1000]]></node_order>
	<externalid><![CDATA[155]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Always use the device volume and mute the ad video only when needed</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Install app&nbsp;</div>
<div>
	2. Initialize the app</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	&nbsp;</div>
<div>
	1)Device volume is - 60%</div>
<div>
	2)Ad Start state is - &nbsp;mute</div>
<div>
	3)Ad volume change 1 &nbsp;- not change</div>
<div>
	4)Ad volume change 2 &nbsp;- not change</div>
<div>
	5)Ad volume change 3 &nbsp;- not change</div>
<div>
	6)Ad end - muted</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1) Device volume after ad end should be - 60%</div>
<div>
	2)Device final volume should be - 60%</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="11059" name="Scenario 02">
	<node_order><![CDATA[1001]]></node_order>
	<externalid><![CDATA[156]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Always use the device volume and mute the ad video only when needed</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Install app&nbsp;</div>
<div>
	2. Initialize the app</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Device volume is - 60%</div>
<div>
	2)Ad Start state is - &nbsp;mute</div>
<div>
	3)Ad volume change 1 &nbsp;- unmute 60%</div>
<div>
	4)Ad volume change 2 &nbsp;- not change</div>
<div>
	5)Ad volume change 3 &nbsp;- not change</div>
<div>
	6)Ad end - 60%</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	1) Device volume after ad end should be - 60%</div>
<div>
	2)Device final volume should be - 60%</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="11062" name="Scenario 03">
	<node_order><![CDATA[1002]]></node_order>
	<externalid><![CDATA[157]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Always use the device volume and mute the ad video only when needed</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Install app&nbsp;</div>
<div>
	2. Initialize the app</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Device volume is - 60%</div>
<div>
	2)Ad Start state is - &nbsp;mute</div>
<div>
	3)Ad volume change 1 &nbsp;- unmute 60%</div>
<div>
	4)Ad volume change 2 &nbsp;- 90%</div>
<div>
	5)Ad volume change 3 &nbsp;- not change</div>
<div>
	6)Ad end - 90%</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1) Device volume after ad end should be - 90%</div>
<div>
	2)Device final volume should be - 90%</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="11065" name="Scenario 04">
	<node_order><![CDATA[1003]]></node_order>
	<externalid><![CDATA[158]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Always use the device volume and mute the ad video only when needed</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Install app&nbsp;</div>
<div>
	2. Initialize the app</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Device volume is - 60%</div>
<div>
	2)Ad Start state is - &nbsp;mute</div>
<div>
	3)Ad volume change 1 &nbsp;- unmute 60%</div>
<div>
	4)Ad volume change 2 &nbsp;- 90%</div>
<div>
	5)Ad volume change 3 &nbsp;- mute</div>
<div>
	6)Ad end - muted</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	1) Device volume after ad end should be - 90%</div>
<div>
	2)Device final volume should be - 90%</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="11068" name="Scenario 05">
	<node_order><![CDATA[1004]]></node_order>
	<externalid><![CDATA[159]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Always use the device volume and mute the ad video only when needed</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Install app&nbsp;</div>
<div>
	2. Initialize the app</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Device volume is - 60%</div>
<div>
	2)Ad Start state is - &nbsp;unmute</div>
<div>
	3)Ad volume change 1 &nbsp;- not change</div>
<div>
	4)Ad volume change 2 &nbsp;- not change</div>
<div>
	5)Ad volume change 3 &nbsp;- not change</div>
<div>
	6)Ad end - 60%</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	1) Device volume after ad end should be- 60%</div>
<div>
	2)Device final volume should be- 60%</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="11071" name="Scenario 06">
	<node_order><![CDATA[1005]]></node_order>
	<externalid><![CDATA[160]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Always use the device volume and mute the ad video only when needed</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Install app&nbsp;</div>
<div>
	2. Initialize the app</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Device volume is - 60%</div>
<div>
	2)Ad Start state is - &nbsp;unmute</div>
<div>
	3)Ad volume change 1 &nbsp;- 60%</div>
<div>
	4)Ad volume change 2 &nbsp;- 20%</div>
<div>
	5)Ad volume change 3 &nbsp;- not change</div>
<div>
	6)Ad end - 20%</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1)Device volume after ad end should be - 20%</div>
<div>
	2)Device final volume should be- 20%</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="11074" name="Scenario 07">
	<node_order><![CDATA[1006]]></node_order>
	<externalid><![CDATA[161]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Always use the device volume and mute the ad video only when needed</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Install app&nbsp;</div>
<div>
	2. Initialize the app</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	Device volume should 60%</div>
<div>
	1.Vungle Ad starts playing in unmuted state&nbsp;</div>
<div>
	2.Ad volume is at 60% &nbsp;</div>
<div>
	3.User taps on mute button&nbsp;</div>
<div>
	4.Ad volume is at 0%</div>
<div>
	5.User pulls down the navigation bar and plays music&nbsp;</div>
<div>
	6.Music plays at 60%&nbsp;</div>
<div>
	7.Vungle Ad ends&nbsp;</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1)Device volume after ad end should be - 60%</div>
<div>
	2)Device final volume should be- 60%</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="11077" name="Scenario 08">
	<node_order><![CDATA[1007]]></node_order>
	<externalid><![CDATA[162]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Always use the device volume and mute the ad video only when needed</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Install app&nbsp;</div>
<div>
	2. Initialize the app</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	Device volume should 60%</div>
<div>
	1.Vungle Ad starts playing in muted state&nbsp;</div>
<div>
	2.Ad volume is at 0% &nbsp;</div>
<div>
	3.User gets a call&nbsp;</div>
<div>
	4.Phone rings at ringer volume</div>
<div>
	5.When ad resumes ad volume is at 0%&nbsp;</div>
<div>
	6.Vungle Ad ends</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1)Device volume after ad end should - 60%</div>
<div>
	2)Device final volume should - 60%</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="11080" name="Scenario 09">
	<node_order><![CDATA[1008]]></node_order>
	<externalid><![CDATA[163]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<div>
	&nbsp;</div>
<div>
	Always use the device volume and mute the ad video only when needed</div>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Install app&nbsp;</div>
<div>
	2. Initialize the app</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Device volume is - 60%</div>
<div>
	2)Ad Start state is - &nbsp;mute</div>
<div>
	3)Ad volume change 1 &nbsp;- unmute 60%</div>
<div>
	4)Ad volume change 2 &nbsp;- 65%</div>
<div>
	5)Ad volume change 3 &nbsp;- &nbsp;H mute</div>
<div>
	6)Ad end - H muted</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	1) Device volume after ad end should be- 65% but inaudible</div>
<div>
	2)Device final volume should be- 65%</div>
<div>
	Note :- We don&#39;t have device which have hardware mute button</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>

<testcase internalid="11083" name="Scenario 10">
	<node_order><![CDATA[1009]]></node_order>
	<externalid><![CDATA[164]]></externalid>
	<version><![CDATA[1]]></version>
	<summary><![CDATA[<p>
	Always use the device volume and mute the ad video only when needed</p>
]]></summary>
	<preconditions><![CDATA[<div>
	1. Install app&nbsp;</div>
<div>
	2. Initialize the app</div>
]]></preconditions>
	<execution_type><![CDATA[1]]></execution_type>
	<importance><![CDATA[2]]></importance>
	<estimated_exec_duration></estimated_exec_duration>
	<status>1</status>
<steps>
<step>
	<step_number><![CDATA[1]]></step_number>
	<actions><![CDATA[<div>
	1)Device volume is - 60%</div>
<div>
	2)Ad Start state is - &nbsp;unmute</div>
<div>
	3)Ad volume change 1 &nbsp;- 20%</div>
<div>
	4)crash the App</div>
]]></actions>
	<expectedresults><![CDATA[<div>
	&nbsp;</div>
<div>
	1) Device final volume should be- 20%</div>
<div>
	&nbsp;</div>
<div>
	Note :- Not testable our side</div>
]]></expectedresults>
	<execution_type><![CDATA[1]]></execution_type>
</step>
</steps>
</testcase>
</testsuite></testsuite>